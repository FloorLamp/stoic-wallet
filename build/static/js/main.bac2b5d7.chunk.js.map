{"version":3,"sources":["ic/candid/ext.did.js","ic/utils.js","ic/RosettaApi.js","ic/candid/ledger.did.js","ic/candid/hzld.did.js","components/Blockie.js","components/AccountDrawer.js","components/SnackbarButton.js","components/TokenCard.js","ic/identity.js","utils.js","components/SendForm.js","components/Transactions.js","components/MainFab.js","components/InputForm.js","views/AccountDetail.js","views/AddressBook.js","views/Neurons.js","views/Settings.js","containers/Wallet.js","components/ConnectList.js","components/WalletDialog.js","containers/Connect.js","containers/Unlock.js","components/AlertDialog.js","components/ConfirmDialog.js","App.js","store.js","theme.js","index.js","ic/extjs.js"],"names":["IDL","TokenIdentifier","Text","AccountIdentifier","User","Variant","Principal","BalanceRequest","Record","Balance","Nat","CommonError_2","BalanceResponse","Balance_2","Extension","TokenIdentifier_2","Metadata","Nat8","Opt","Vec","CommonError","Result_3","Result_2","Memo","SubAccount","TransferRequest","Bool","TransferResponse","Null","Service","Func","sjcl","require","bip39","pbkdf2","principalToAccountIdentifier","p","s","padding","Buffer","array","Uint8Array","fromText","toBlob","getSubAccountArray","hash","sha224","checksum","to32bits","getCrc32","array2","toHexString","Array","isArray","concat","length","fill","from32bits","ba","value","i","num","b","ArrayBuffer","DataView","setUint32","from","byteArray","byte","toString","slice","join","fromHexString","hex","substr","bytes","c","push","parseInt","mnemonicToId","mnemonic","seed","mnemonicToSeedSync","splice","Ed25519KeyIdentity","generate","encrypt","principal","password","Promise","resolve","reject","e","d","btoa","decrypt","data","atob","isHex","h","test","validateAddress","a","validatePrincipal","toText","JSONbig","jsonBigint","strict","RosettaErrorType","Object","freeze","NotFound","Timeout","NetworkError","RosettaError","message","status","errorType","Error","Transaction","rosettaTransaction","blockIndex","this","transaction_identifier","timestampMs","metadata","timestamp","div","toNumber","Date","operations","type","account1Address","account","address","amount","BigNumber","isZero","negated","account2Address","fee","memo","RosettaApi","axios","create","baseURL","method","transformRequest","stringify","transformResponse","parse","headers","networkIdentifier","networksList","then","res","network_identifiers","find","blockchain","accountAddress","accountBalanceByAddress","response","balances","isAxiosError","undefined","networkStatus","current_block_identifier","index","transactionHash","transactionsByHash","responseTransactions","transactions","transaction","block_identifier","limit","maxBlockIndex","offset","Math","max","transactionCount","min","getTransactionByBlock","transactionsByAccount","all","map","blockTransaction","reverse","blockByIndex","block","url","request","network_identifier","account_identifier","Duration","Nat64","Nat32","ArchiveOptions","ICPTs","AccountBalanceArgs","Tuple","BlockHeight","NotifyCanisterArgs","TimeStamp","SendArgs","OperatorAction","OperatorRequest","OperatorResponse","style","width","height","Blockie","props","src","makeBlockie","drawerWidth","useStyles","makeStyles","theme","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","zIndex","AccountDrawer","window","classes","useTheme","container","document","body","currentPrincipal","useSelector","state","accounts","principals","idtype","identity","dispatch","useDispatch","accountsList","marginTop","marginBottom","backgroundColor","position","top","textAlign","className","maxHeight","alt","Divider","List","ListItem","button","onClick","changeRoute","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","noWrap","secondaryTypographyProps","primary","name","secondary","nextid","payload","id","ListItemIcon","lockWallet","bottom","left","right","aria-label","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","SnackbarButton","React","useState","setOpen","handleClose","event","reason","cloneElement","children","Snackbar","autoHideDuration","anchorOrigin","action","Fragment","IconButton","size","color","fontSize","styles","root","selectedCard","card","title","pos","intervalId","api","extjs","connect","TokenCard","balance","setBalance","updateBalance","token","getBalance","Number","decimals","useEffect","setInterval","clearInterval","Grid","item","xl","lg","md","Card","selected","CardActionArea","CardContent","Typography","gutterBottom","symbol","identities","processId","getPrincipal","StoicIdentity","getIdentity","hasOwnProperty","setup","optdata","AuthClient","auth","login","identityProvider","onSuccess","onError","localStorage","setItem","_em","load","_id","t","getItem","unlock","catch","lock","logout","removeItem","clear","validateMnemonic","generateMnemonic","validatePassword","fallbackCopyTextToClipboard","text","textArea","createElement","appendChild","focus","select","msg","execCommand","console","log","err","error","removeChild","identityTypes","clipboardCopy","navigator","clipboard","writeText","compressAddress","pp","split","SendForm","currentAccount","step","setStep","setAmount","minFee","setMinFee","setFee","to","setTo","advanced","setAdvanced","setMemo","setNotify","f","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","DialogContentText","fontWeight","TextField","autoFocus","margin","label","onChange","target","marginRight","cursor","multiline","rows","rowsMax","DialogActions","Button","isNaN","_from_principal","_from_sa","_to_user","_amount","BigInt","_fee","_memo","loader","transfer","r","alert","finally","Transactions","setTransactions","empty","table","minWidth","stopPoll","startPoll","fetchTx","_address","JSON","getTransactions","txs","updateTransactions","setTimeout","paragraph","paddingTop","align","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","tx","scope","relative","autoUpdate","date","href","spacing","MainFab","Fab","InputForm","defaultValue","setValue","defaultSecondaryValue","secondaryValue","setSecondaryValue","aria-labelledby","content","inputLabel","secondaryInput","buttonLabel","AccountDetail","currentToken","tokens","setTokens","flexGrow","grid","paddingLeft","vertical","horizontal","edge","ListItemSecondaryAction","justify","alignItems","cid","findIndex","x","getMetadata","verticalAlign","marginLeft","m","AddressBook","addresses","largeIcon","contact","editAddress","Neurons","Settings","assets","setAssets","indexOf","makeAssets","subheader","ListSubheader","confirm","v","clearWallet","display","appBar","menuButton","toolbarButtons","routes","view","Wallet","mobileOpen","setMobileOpen","route","setRoute","toolbarTitle","setToolbarTitle","handleDrawerToggle","remove","CssBaseline","AppBar","Toolbar","renderView","ConnectList","handleClick","handler","tips","WalletDialog","initialRoute","newMnemonic","setNewMnemonic","setMnemonic","setPassword","password2","setPassword2","setAddress","tipsIndex","setTipsIndex","cancel","submit","od","hideBackdrop","w","required","Connect","setInitialRoute","Unlock","AlertDialog","aria-describedby","ConfirmDialog","buttonCancel","buttonConfirm","backdrop","emptyAlert","App","loaderOpen","setLoaderOpen","appState","setAppState","alertData","setAlertData","confirmData","setConfirmData","showAlert","setShowAlert","showConfirm","setShowConfirm","l","Backdrop","CircularProgress","appData","initDb","db","savenow","_principal","subaccount","saveDb","newDb","tc","clearDb","clearState","newState","updatedDb","_p","_a","store","createStore","ii","filter","createMuiTheme","palette","main","red","A400","background","default","overrides","MuiIconButton","MuiAvatar","colorDefault","MuiListItemIcon","ReactDOM","render","ThemeProvider","querySelector","LEDGER_CANISTER_ID","rosettaApi","constructUser","u","tokenIdentifier","fromBlob","ExtConnection","host","_preloadedIdls","ledgerIDL","hzldIDL","_metadata","_identity","_host","_agent","_canisters","_makeAgent","idl","extIDL","Actor","createActor","agent","canisterId","tid","tokenObj","canister","decodeTokenId","ok","fungible","nonfungible","princpal","getAccountBalance","args","getBalanceInsecure","bal","getTransactionsByAccount","ts","_ts","_t","from_principal","from_sa","to_user","notify","send_dfx","bh","mintCycles","HttpAgent"],"mappings":"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","file":"static/js/main.bac2b5d7.chunk.js","sourcesContent":["export default ({ IDL }) => {\n  const TokenIdentifier = IDL.Text;\n  const AccountIdentifier_2 = IDL.Text;\n  const AccountIdentifier = AccountIdentifier_2;\n  const User = IDL.Variant({\n    'principal' : IDL.Principal,\n    'address' : AccountIdentifier,\n  });\n  const BalanceRequest_2 = IDL.Record({\n    'token' : TokenIdentifier,\n    'user' : User,\n  });\n  const BalanceRequest = BalanceRequest_2;\n  const Balance = IDL.Nat;\n  const CommonError_2 = IDL.Variant({\n    'InvalidToken' : TokenIdentifier,\n    'Other' : IDL.Text,\n  });\n  const Result_4 = IDL.Variant({ 'ok' : Balance, 'err' : CommonError_2 });\n  const BalanceResponse_2 = Result_4;\n  const BalanceResponse = BalanceResponse_2;\n  const Balance_2 = Balance;\n  const Extension_2 = IDL.Text;\n  const Extension = Extension_2;\n  const TokenIdentifier_2 = TokenIdentifier;\n  const Metadata_2 = IDL.Variant({\n    'fungible' : IDL.Record({\n      'decimals' : IDL.Nat8,\n      'metadata' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n      'name' : IDL.Text,\n      'symbol' : IDL.Text,\n    }),\n    'nonfungible' : IDL.Record({ 'metadata' : IDL.Opt(IDL.Vec(IDL.Nat8)) }),\n  });\n  const Metadata = Metadata_2;\n  const CommonError = CommonError_2;\n  const Result_3 = IDL.Variant({ 'ok' : Metadata, 'err' : CommonError });\n  const Result_2 = IDL.Variant({ 'ok' : Balance_2, 'err' : CommonError });\n  const Memo = IDL.Vec(IDL.Nat8);\n  const SubAccount_2 = IDL.Vec(IDL.Nat8);\n  const SubAccount = SubAccount_2;\n  const TransferRequest_2 = IDL.Record({\n    'to' : User,\n    'fee' : Balance,\n    'token' : TokenIdentifier,\n    'notify' : IDL.Bool,\n    'from' : User,\n    'memo' : Memo,\n    'subaccount' : IDL.Opt(SubAccount),\n    'amount' : Balance,\n  });\n  const TransferRequest = TransferRequest_2;\n  const Result = IDL.Variant({\n    'ok' : Balance,\n    'err' : IDL.Variant({\n      'CannotNotify' : AccountIdentifier,\n      'InsufficientBalance' : IDL.Null,\n      'InvalidToken' : TokenIdentifier,\n      'Rejected' : IDL.Null,\n      'Unauthorized' : AccountIdentifier,\n      'Other' : IDL.Text,\n    }),\n  });\n  const TransferResponse_2 = Result;\n  const TransferResponse = TransferResponse_2;\n  return IDL.Service({\n    'balance' : IDL.Func([BalanceRequest], [BalanceResponse], ['query']),\n    'balance_secure' : IDL.Func([BalanceRequest], [BalanceResponse], []),\n    'extensions' : IDL.Func([], [IDL.Vec(Extension)], ['query']),\n    'extensions_secure' : IDL.Func([], [IDL.Vec(Extension)], []),\n    'fee' : IDL.Func([], [Balance_2], ['query']),\n    'metadata' : IDL.Func([TokenIdentifier_2], [Result_3], ['query']),\n    'metadata_secure' : IDL.Func([TokenIdentifier_2], [Result_3], []),\n    'supply' : IDL.Func([TokenIdentifier_2], [Result_2], ['query']),\n    'supply_secure' : IDL.Func([TokenIdentifier_2], [Result_2], []),\n    'transfer' : IDL.Func([TransferRequest], [TransferResponse], []),\n  });\n};\nexport const init = ({ IDL }) => { return []; };","/* global BigInt */\r\nimport { Principal } from \"@dfinity/agent\";  \r\nimport { Ed25519KeyIdentity } from \"@dfinity/identity\";\r\nimport { getCrc32 } from '@dfinity/agent/lib/esm/utils/getCrc';\r\nimport { sha224 } from '@dfinity/agent/lib/esm/utils/sha224';\r\nconst sjcl = require('sjcl')\r\nconst bip39 = require('bip39')\r\nconst pbkdf2 = require(\"pbkdf2\");\r\n\r\nconst principalToAccountIdentifier = (p, s) => {\r\n  const padding = Buffer(\"\\x0Aaccount-id\");\r\n  const array = new Uint8Array([\r\n      ...padding,\r\n      ...Principal.fromText(p).toBlob(),\r\n      ...getSubAccountArray(s)\r\n  ]);\r\n  const hash = sha224(array);\r\n  const checksum = to32bits(getCrc32(hash));\r\n  const array2 = new Uint8Array([\r\n      ...checksum,\r\n      ...hash\r\n  ]);\r\n  return toHexString(array2);\r\n};\r\nconst getSubAccountArray = (s) => {\r\n  if (Array.isArray(s)){\r\n    return s.concat(Array(32-s.length).fill(0));\r\n  } else {\r\n    //32 bit number only\r\n    return Array(28).fill(0).concat(to32bits(s ? s : 0))\r\n  }\r\n};\r\nconst from32bits = ba => {\r\n  var value;\r\n  for (var i = 0; i < 4; i++) {\r\n    value = (value << 8) | ba[i];\r\n  }\r\n  return value;\r\n}\r\nconst to32bits = num => {\r\n  let b = new ArrayBuffer(4);\r\n  new DataView(b).setUint32(0, num);\r\n  return Array.from(new Uint8Array(b));\r\n}\r\nconst toHexString = (byteArray)  =>{\r\n  return Array.from(byteArray, function(byte) {\r\n    return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n  }).join('')\r\n}\r\nconst fromHexString = (hex) => {\r\n  if (hex.substr(0,2) == \"0x\") hex = hex.substr(2);\r\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\r\n  bytes.push(parseInt(hex.substr(c, 2), 16));\r\n  return bytes;\r\n}\r\nconst mnemonicToId = (mnemonic) => {\r\n  var seed = bip39.mnemonicToSeedSync(mnemonic);\r\n  seed = Array.from(seed);\r\n  seed = seed.splice(0, 32);\r\n  seed = new Uint8Array(seed);\r\n  return Ed25519KeyIdentity.generate(seed);\r\n}\r\nconst encrypt = (mnemonic, principal, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    pbkdf2.pbkdf2(password, principal, 30000, 512, 'sha512', (e, d) => {\r\n      if (e) return reject(e);\r\n      resolve(sjcl.encrypt(d.toString(), btoa(mnemonic)));\r\n    });\r\n  });\r\n}\r\nconst decrypt = (data, principal, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    pbkdf2.pbkdf2(password, principal, 30000, 512, 'sha512', (e, d) => {\r\n      if (e) return reject(e);\r\n      try{\r\n        resolve(atob(sjcl.decrypt(d.toString(), data)));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  });\r\n}\r\nconst isHex = (h) => {\r\n  var regexp = /^[0-9a-fA-F]+$/;\r\n  return regexp.test(h);\r\n};\r\nconst validateAddress = (a) => {\r\n  return (isHex(a) && a.length == 64)\r\n}\r\nconst validatePrincipal = (p) => {\r\n  try {\r\n    return (p == Principal.fromText(p).toText());\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\nexport { \r\n  Principal, \r\n  principalToAccountIdentifier, \r\n  getSubAccountArray, \r\n  from32bits, \r\n  to32bits, \r\n  toHexString, \r\n  fromHexString, \r\n  mnemonicToId, \r\n  encrypt, \r\n  decrypt, \r\n  isHex,\r\n  bip39,\r\n  validateAddress,\r\n  validatePrincipal  };","/**\r\n * @file RosettaApi\r\n * @copyright Copyright (c) 2018-2021 Dylan Miller and dfinityexplorer contributors\r\n * @license MIT License\r\n */\r\n\r\nimport axios from 'axios';\r\nimport BigNumber from 'bignumber.js';\r\nimport jsonBigint from 'json-bigint';\r\n\r\n// Set useNativeBigInt to true and use BigInt once BigInt is widely supported.\r\nconst JSONbig = jsonBigint({ strict: true });\r\n\r\n/**\r\n * Types of Rosetta API errors.\r\n */\r\nexport const RosettaErrorType = Object.freeze({\r\n  NotFound: 0,\r\n  Timeout: 1,\r\n  NetworkError: 2\r\n});\r\n\r\n/**\r\n * Describes the cause of a Rosetta API error.\r\n */\r\nexport class RosettaError extends Error {\r\n  /**\r\n   * Create a RosettaError.\r\n   * @param {String} message An error message describing the error.\r\n   * @param {Number} status number The HTTP response status.\r\n   */\r\n  constructor(message, status) {\r\n    super(message);\r\n    switch (status) {\r\n    case 408:\r\n      this.errorType = RosettaErrorType.Timeout;\r\n      break;\r\n    case 500:\r\n      this.errorType = RosettaErrorType.NotFound;\r\n      break;\r\n    default:\r\n      this.errorType = RosettaErrorType.NetworkError;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Contains information about a transaction.\r\n */\r\nexport class Transaction  {\r\n  /**\r\n   * Create a Transaction.\r\n   * @param {Any} rosettaTransaction The Rosetta Transaction object of the transaction.\r\n   * @param {Number} blockIndex The index of the block containing the transaction.\r\n   * milliseconds since the Unix Epoch.\r\n   */\r\n  constructor(rosettaTransaction, blockIndex) {\r\n    this.blockIndex = blockIndex;\r\n    this.hash = rosettaTransaction.transaction_identifier.hash;\r\n    const timestampMs = rosettaTransaction.metadata.timestamp.div(1000000).toNumber();\r\n    this.timestamp = new Date(timestampMs);\r\n    const operations = rosettaTransaction.operations;\r\n    if (operations.length >= 1) { \r\n      this.type = operations[0].type;\r\n      this.status = operations[0].status;\r\n      this.account1Address = operations[0].account.address;\r\n      this.amount = new BigNumber(operations[0].amount.value);\r\n      // Negate amount for TRANSACTION and BURN, so that they appear in the UI as positive values.\r\n      if ((operations[0].type === 'TRANSACTION' || operations[0].type === 'BURN') &&\r\n        !this.amount.isZero()) {\r\n        this.amount = this.amount.negated();\r\n      }\r\n    }\r\n    else {\r\n      this.type = '';\r\n      this.status = '';\r\n      this.account1Address = '';\r\n      this.amount = new BigNumber(0);\r\n    }\r\n    if (operations.length >= 2 && operations[1].type === 'TRANSACTION')\r\n      this.account2Address = operations[1].account.address;\r\n    else\r\n      this.account2Address = '';\r\n    if (operations.length >= 3 && operations[2].type === 'FEE')\r\n      this.fee = new BigNumber(-operations[2].amount.value);\r\n    else\r\n      this.fee = new BigNumber(0);\r\n    this.memo = new BigNumber(rosettaTransaction.metadata.memo);\r\n  }\r\n};\r\n\r\n/**\r\n * Manages Rosetta API calls.\r\n */\r\nexport default class RosettaApi {\r\n  /**\r\n   * Create a RosettaApi.\r\n   */\r\n  constructor() {\r\n    this.axios = axios.create({\r\n      baseURL: 'https://rosetta-api.internetcomputer.org/',\r\n      method: 'post',\r\n      transformRequest: (data) => JSONbig.stringify(data),\r\n      transformResponse: (data) => JSONbig.parse(data),\r\n      headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n    });\r\n\r\n    this.networkIdentifier = this.networksList().then(res =>\r\n      res.network_identifiers.find(\r\n        networkIdentifier => networkIdentifier.blockchain === 'Internet Computer'\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the ICP account balance of the specified account.\r\n   * @param {string} accountAddress The account address to get the ICP balance of.\r\n   * @returns {Promise<BigNumber|RosettaError>} The ICP account balance of the specified account, or\r\n   * a RosettaError for error.\r\n   */\r\n  async getAccountBalance(accountAddress) {\r\n    try {\r\n      const response = await this.accountBalanceByAddress(accountAddress);\r\n      return new BigNumber(response.balances[0].value);\r\n    }\r\n    catch (error) {\r\n      //console.log(error);\r\n      return new RosettaError(\r\n        error.message, axios.isAxiosError(error) ? error?.response?.status : undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the latest block index.\r\n   * @returns {Promise<number>} The latest block index, or a RosettaError for error.\r\n   */\r\n  async getLastBlockIndex() {\r\n    try {\r\n      const response = await this.networkStatus();\r\n      return response.current_block_identifier.index;\r\n    }\r\n    catch (error) {\r\n      //console.log(error);\r\n      return new RosettaError(\r\n        error.message, axios.isAxiosError(error) ? error?.response?.status : undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the Transaction object with the specified hash.\r\n   * @param {string} transactionHash The hash of the transaction to return.\r\n   * @returns {Transaction|null} The Transaction object with the specified hash, or a RosettaError\r\n   * for error.\r\n   */\r\n  async getTransaction(transactionHash) {\r\n    try {\r\n      const responseTransactions = await this.transactionsByHash(transactionHash);\r\n      if (responseTransactions.transactions.length === 0)\r\n        return new RosettaError('Transaction not found.', 500);\r\n\r\n      return new Transaction(\r\n        responseTransactions.transactions[0].transaction,\r\n        responseTransactions.transactions[0].block_identifier.index);\r\n    }\r\n    catch (error) {\r\n      //console.log(error);\r\n      return new RosettaError(\r\n        error.message, axios.isAxiosError(error) ? error?.response?.status : undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return an array of Transaction objects based on the specified parameters, or an empty array if\r\n   * none found.\r\n   * @param limit {number} The maximum number of transactions to return in one call.\r\n   * @param maxBlockIndex {number} The block index to start at. If not specified, start at current\r\n   * block.\r\n   * @param offset {number} The offset from maxBlockIndex to start returning transactions.\r\n   * @returns {Promise<Array<Transaction>|null>} An array of Transaction objects, or a RosettaError\r\n   * for error.\r\n   */\r\n  async getTransactions(limit, maxBlockIndex, offset) {\r\n    try {\r\n      // This function can be simplified once /search/transactions supports using the properties\r\n      // max_block, offset, and limit.\r\n      let blockIndex;\r\n      if (maxBlockIndex)\r\n        blockIndex = maxBlockIndex;\r\n      else {\r\n        // Get the latest block index.\r\n        const response = await this.networkStatus();\r\n        blockIndex = response.current_block_identifier.index;\r\n      }\r\n      if (offset)\r\n        blockIndex = Math.max(blockIndex - offset, -1);\r\n      const transactionCount = Math.min(limit, blockIndex + 1);\r\n      const transactions = [];\r\n      for (let i = 0; i < transactionCount; i++)\r\n        transactions.push(await this.getTransactionByBlock(blockIndex - i));\r\n      return transactions;\r\n    }\r\n    catch (error) {\r\n      //console.log(error);\r\n      return new RosettaError(\r\n        error.message, axios.isAxiosError(error) ? error?.response?.status : undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return an array of Transaction objects based on the specified parameters, or an empty array if\r\n   * none found.\r\n   * @param {string} accountAddress The account address to get the transactions of.\r\n   * @returns {Promise<Array<Transaction>|null>} An array of Transaction objects, or a RosettaError\r\n   * for error.\r\n   */\r\n  async getTransactionsByAccount(accountAddress) {\r\n    try {\r\n      const response = await this.transactionsByAccount(accountAddress);\r\n      const transactions = await Promise.all(\r\n        response.transactions.map((blockTransaction) => {\r\n          return new Transaction(\r\n            blockTransaction.transaction, blockTransaction.block_identifier.index);\r\n        })\r\n      );\r\n      return transactions.reverse();\r\n    }\r\n    catch (error) {\r\n      //console.log(error);\r\n      return new RosettaError(\r\n        error.message, axios.isAxiosError(error) ? error?.response?.status : undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the Transaction corresponding to the specified block index (i.e., block height).\r\n   * @param {number} blockIndex The index of the block to return the Transaction for.\r\n   * @returns {Promise<Transaction>} The Transaction corresponding to the specified block index.\r\n   * @private\r\n   */\r\n  async getTransactionByBlock(blockIndex) {\r\n    const response = await this.blockByIndex(blockIndex);\r\n    return new Transaction(response.block.transactions[0], blockIndex);\r\n  }\r\n\r\n  /**\r\n   * Perform the specified http request and return the response data.\r\n   * @param {string} url The server URL that will be used for the request.\r\n   * @param {object} data The data to be sent as the request body.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async request(url, data) {\r\n    return (await this.axios.request({ url: url, data: data })).data;\r\n  }\r\n\r\n  /**\r\n   * Return the /network/list response, containing a list of NetworkIdentifiers that the Rosetta\r\n   * server supports.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  networksList() {\r\n    return this.request('/network/list', {});\r\n  }\r\n\r\n  /**\r\n   * Return /network/status response, describing the current status of the network.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async networkStatus() {\r\n    const networkIdentifier = await this.networkIdentifier;\r\n    return this.request(\r\n      '/network/status', {\r\n        network_identifier: networkIdentifier\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the /account/balance response for the specified account.\r\n   * @param {string} accountAddress The account address to get the balance of.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async accountBalanceByAddress(accountAddress) {\r\n    const networkIdentifier = await this.networkIdentifier;\r\n    return this.request(\r\n      '/account/balance', {\r\n        network_identifier: networkIdentifier,\r\n        account_identifier: {address: accountAddress}\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the /block response for the block corresponding to the specified block index (i.e.,\r\n   * block height).\r\n   * @param {number} blockIndex The index of the block to return.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async blockByIndex(blockIndex) {\r\n    const networkIdentifier = await this.networkIdentifier;\r\n    return this.request(\r\n      '/block', {\r\n        network_identifier: networkIdentifier,\r\n        block_identifier: {index: blockIndex}\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the /search/transactions response for transactions containing an operation that affects\r\n   * the specified account.\r\n   * @param {string} accountAddress The account address to get the transactions of.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async transactionsByAccount(accountAddress) {\r\n    const networkIdentifier = await this.networkIdentifier;\r\n    return this.request(\r\n      '/search/transactions', {\r\n        network_identifier: networkIdentifier,\r\n        account_identifier: {address: accountAddress}\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the /search/transactions response for transactions (only one) with the specified hash.\r\n   * @param {string} transactionHash The hash of the transaction to return.\r\n   * @returns {Promise<any>} The response body that was provided by the server.\r\n   * @private\r\n   */\r\n  async transactionsByHash(transactionHash) {\r\n    const networkIdentifier = await this.networkIdentifier;\r\n    return this.request(\r\n      '/search/transactions', {\r\n        network_identifier: networkIdentifier,\r\n        transaction_identifier: {hash: transactionHash}\r\n      }\r\n    );\r\n  }\r\n}","export default ({ IDL }) => {\r\n  const AccountIdentifier = IDL.Text;\r\n  const Duration = IDL.Record({ 'secs' : IDL.Nat64, 'nanos' : IDL.Nat32 });\r\n  const ArchiveOptions = IDL.Record({\r\n    'max_message_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'node_max_memory_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'controller_id' : IDL.Principal,\r\n  });\r\n  const ICPTs = IDL.Record({ 'e8s' : IDL.Nat64 });\r\n  const LedgerCanisterInitPayload = IDL.Record({\r\n    'send_whitelist' : IDL.Vec(IDL.Tuple(IDL.Principal)),\r\n    'minting_account' : AccountIdentifier,\r\n    'transaction_window' : IDL.Opt(Duration),\r\n    'max_message_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'archive_options' : IDL.Opt(ArchiveOptions),\r\n    'initial_values' : IDL.Vec(IDL.Tuple(AccountIdentifier, ICPTs)),\r\n  });\r\n  const AccountBalanceArgs = IDL.Record({ 'account' : AccountIdentifier });\r\n  const SubAccount = IDL.Vec(IDL.Nat8);\r\n  const BlockHeight = IDL.Nat64;\r\n  const NotifyCanisterArgs = IDL.Record({\r\n    'to_subaccount' : IDL.Opt(SubAccount),\r\n    'from_subaccount' : IDL.Opt(SubAccount),\r\n    'to_canister' : IDL.Principal,\r\n    'max_fee' : ICPTs,\r\n    'block_height' : BlockHeight,\r\n  });\r\n  const Memo = IDL.Nat64;\r\n  const TimeStamp = IDL.Record({ 'timestamp_nanos' : IDL.Nat64 });\r\n  const SendArgs = IDL.Record({\r\n    'to' : AccountIdentifier,\r\n    'fee' : ICPTs,\r\n    'memo' : Memo,\r\n    'from_subaccount' : IDL.Opt(SubAccount),\r\n    'created_at_time' : IDL.Opt(TimeStamp),\r\n    'amount' : ICPTs,\r\n  });\r\n  return IDL.Service({\r\n    'account_balance_dfx' : IDL.Func([AccountBalanceArgs], [ICPTs], ['query']),\r\n    'notify_dfx' : IDL.Func([NotifyCanisterArgs], [], []),\r\n    'send_dfx' : IDL.Func([SendArgs], [BlockHeight], []),\r\n  });\r\n};\r\nexport const init = ({ IDL }) => {\r\n  const AccountIdentifier = IDL.Text;\r\n  const Duration = IDL.Record({ 'secs' : IDL.Nat64, 'nanos' : IDL.Nat32 });\r\n  const ArchiveOptions = IDL.Record({\r\n    'max_message_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'node_max_memory_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'controller_id' : IDL.Principal,\r\n  });\r\n  const ICPTs = IDL.Record({ 'e8s' : IDL.Nat64 });\r\n  const LedgerCanisterInitPayload = IDL.Record({\r\n    'send_whitelist' : IDL.Vec(IDL.Tuple(IDL.Principal)),\r\n    'minting_account' : AccountIdentifier,\r\n    'transaction_window' : IDL.Opt(Duration),\r\n    'max_message_size_bytes' : IDL.Opt(IDL.Nat32),\r\n    'archive_options' : IDL.Opt(ArchiveOptions),\r\n    'initial_values' : IDL.Vec(IDL.Tuple(AccountIdentifier, ICPTs)),\r\n  });\r\n  return [LedgerCanisterInitPayload];\r\n};","export default ({ IDL }) => {\r\n  const User = IDL.Principal;\r\n  const BalanceRequest = IDL.Record({ 'user' : User });\r\n  const Balance = IDL.Nat;\r\n  const Metadata = IDL.Vec(IDL.Nat8);\r\n  const TransferRequest = IDL.Record({\r\n    'to' : User,\r\n    'metadata' : IDL.Opt(Metadata),\r\n    'from' : User,\r\n    'amount' : Balance,\r\n  });\r\n  const Result_2 = IDL.Variant({\r\n    'ok' : IDL.Null,\r\n    'err' : IDL.Variant({\r\n      'InsufficientBalance' : IDL.Null,\r\n      'InvalidSource' : User,\r\n      'Unauthorized' : IDL.Null,\r\n    }),\r\n  });\r\n  const TransferResponse = Result_2;\r\n  const OperatorAction = IDL.Variant({\r\n    'removeOperator' : IDL.Null,\r\n    'setOperator' : IDL.Null,\r\n  });\r\n  const OperatorRequest = IDL.Record({\r\n    'owner' : User,\r\n    'operators' : IDL.Vec(IDL.Tuple(User, OperatorAction)),\r\n  });\r\n  const Result = IDL.Variant({\r\n    'ok' : IDL.Null,\r\n    'err' : IDL.Variant({ 'Unauthorized' : IDL.Null, 'InvalidOwner' : User }),\r\n  });\r\n  const OperatorResponse = Result;\r\n  return IDL.Service({\r\n    'getBalance' : IDL.Func([BalanceRequest], [IDL.Opt(Balance)], []),\r\n    'getBalanceInsecure' : IDL.Func(\r\n        [BalanceRequest],\r\n        [IDL.Opt(Balance)],\r\n        ['query'],\r\n      ),\r\n    'getCommunityChestValueInsecure' : IDL.Func(\r\n        [],\r\n        [IDL.Opt(IDL.Nat)],\r\n        ['query'],\r\n      ),\r\n    'getInfo' : IDL.Func(\r\n        [],\r\n        [\r\n          IDL.Record({\r\n            'balance' : IDL.Nat,\r\n            'maxLiveSize' : IDL.Nat,\r\n            'heap' : IDL.Nat,\r\n            'size' : IDL.Nat,\r\n          }),\r\n        ],\r\n        ['query'],\r\n      ),\r\n    'getNumberOfAccounts' : IDL.Func([], [IDL.Nat], []),\r\n    'getTokenInfo' : IDL.Func(\r\n        [],\r\n        [\r\n          IDL.Record({\r\n            'fee' : IDL.Nat,\r\n            'totalMinted' : IDL.Nat,\r\n            'totalSupply' : IDL.Nat,\r\n            'totalTransactions' : IDL.Nat,\r\n          }),\r\n        ],\r\n        ['query'],\r\n      ),\r\n    'getTotalMinted' : IDL.Func([], [IDL.Nat], []),\r\n    'mint' : IDL.Func([IDL.Principal, IDL.Nat], [], []),\r\n    'transfer' : IDL.Func([TransferRequest], [TransferResponse], []),\r\n    'updateOperator' : IDL.Func(\r\n        [IDL.Vec(OperatorRequest)],\r\n        [OperatorResponse],\r\n        [],\r\n      ),\r\n  });\r\n};\r\nexport const init = ({ IDL }) => { return []; };","import React, { useState, useEffect } from 'react';\r\nimport makeBlockie from 'ethereum-blockies-base64';\r\nconst style = {\r\n  width:\"100%\", \r\n  height:\"100%\", \r\n}\r\nfunction Blockie(props) {\r\n  return (<img style={style} src={makeBlockie(props.address)}/>);\r\n}\r\nexport default Blockie;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Blockie from '../components/Blockie';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    zIndex: 1\r\n  }\r\n}));\r\n    \r\nexport default function AccountDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const accounts = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].accounts : []))\r\n  const idtype = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity.type : \"\"));\r\n  const principal = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity.principal : \"\"));\r\n  const dispatch = useDispatch()\r\n  \r\n  const addAccount = () => {\r\n    var nextid = accounts.length;\r\n    dispatch({ type: 'account/add', payload : {id : nextid, principal : principal}});\r\n    props.changeRoute('accountDetail', nextid);\r\n  };\r\n  \r\n  const accountsList = (\r\n    <div style={{marginTop:64, marginBottom: 100}}>\r\n      <div style={{width:drawerWidth-1, zIndex: 10, backgroundColor:'white', position:\"fixed\", top:0, textAlign:\"center\"}} className={classes.toolbar}>\r\n        {/*<span style={{display:'block', fontSize:'x-large',padding:'15px 0', textAlign:'center',fontWeight:'bold'}}>Stoic Wallet <span style={{fontSize:'small',fontWeight:'normal'}}>By Toniq Labs</span></span>*/}\r\n        <img style={{maxHeight:'50px',marginTop:'5px'}} alt=\"Stoic Wallet by Toniq Labs\" src=\"logo.png\" />\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {accounts.map((account, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <ListItem button onClick={() => props.changeRoute('accountDetail', index)}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Blockie address={account.address} />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText \r\n                  primaryTypographyProps={{noWrap:true}} \r\n                  secondaryTypographyProps={{noWrap:true}} \r\n                  primary={account.name}\r\n                  secondary={account.address} />\r\n              </ListItem>\r\n            </div>\r\n          )\r\n        })}\r\n        <ListItem button onClick={addAccount}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add Account\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button onClick={() => props.changeRoute('addressBook')}>\r\n          <ListItemIcon><PeopleIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Address Book\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => props.changeRoute('neurons')}>\r\n          <ListItemIcon><AllInclusiveIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Neurons\" />\r\n        </ListItem>\r\n        {idtype == 'watch' ? \"\" :\r\n        <ListItem button onClick={() => props.lockWallet()}>\r\n          <ListItemIcon><LockIcon /></ListItemIcon>\r\n          <ListItemText primary=\"Lock Wallet\" />\r\n        </ListItem> }\r\n      </List>\r\n      <div style={{width: drawerWidth-1, zIndex: 10, backgroundColor:'white', position:\"fixed\", bottom:0, textAlign:'center'}} className={classes.toolbar}>\r\n        <span style={{position:'absolute', bottom:'10px', left:'0', right:'0'}}>Connected to Mainnet - v0.1.0</span>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n      <Hidden smUp implementation=\"css\">\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n          open={props.open}\r\n          onClose={props.onClose}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {accountsList}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          variant=\"permanent\"\r\n          open\r\n        >\r\n          {accountsList}\r\n        </Drawer>\r\n      </Hidden>\r\n    </nav>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function SnackbarButton(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (typeof props.onClick != 'undefined') props.onClick();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (  \r\n    <>\r\n      {React.cloneElement(props.children, {onClick: handleClick})}\r\n      <Snackbar\r\n        style={{position:\"fixed\"}}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        anchorOrigin={props.anchorOrigin}\r\n        onClose={handleClose}\r\n        message={props.message}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        } \r\n      /> \r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\"\r\nimport extjs from '../ic/extjs.js';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst styles = {\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  selectedCard: {\r\n    height: \"100%\",\r\n    backgroundColor: '#003240',\r\n    color: 'white'\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\nvar intervalId = 0;\r\nconst api = extjs.connect(\"https://boundary.ic0.app/\");\r\nexport default function TokenCard(props) {\r\n  const [balance, setBalance] = React.useState(false);\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const identity = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity : {}));\r\n  const handleClick = () => {\r\n    props.onClick();\r\n  };\r\n  const updateBalance = () => {\r\n    api.token(props.data.id).getBalance(props.address, identity.principal).then(b => {\r\n      setBalance(Number(b)/(10**props.data.decimals));\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n    updateBalance();\r\n    intervalId = setInterval(() => updateBalance(), 10000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    setBalance(false);\r\n    updateBalance();\r\n  }, [props.address]);\r\n  return (\r\n    <Grid style={styles.root} item xl={2} lg={3} md={4}>\r\n      <Card onClick={handleClick} style={props.selected ? styles.selectedCard : styles.card }>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography style={styles.title} color={props.selected ? \"inherit\" : \"textSecondary\"} gutterBottom>\r\n              {props.data.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" >\r\n              {balance === false ? \"Loading\" : balance + \" \" + props.data.symbol}\r\n            </Typography>\r\n            {/*<Typography style={styles.pos} color={props.selected ? \"inherit\" : \"textSecondary\"}>\r\n              ~$123.04USD\r\n            </Typography>*/}\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","/* global BigInt */\nimport { Principal } from \"@dfinity/agent\";  \nimport { Ed25519KeyIdentity } from \"@dfinity/identity\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { \n  mnemonicToId, \n  validatePrincipal, \n  encrypt, \n  decrypt, \n  bip39 } from \"./utils.js\";\n\nvar identities = {};\nconst processId = (id, type) => {\n  var p = id.getPrincipal().toString();\n  identities[p] = id;\n  return {\n    principal : p,\n    type : type\n  }\n}\nconst StoicIdentity = {\n  getIdentity : (principal) => {\n    if (!identities.hasOwnProperty(principal)) return false;\n    return identities[principal];\n  },\n  setup : (type, optdata) => {\n    return new Promise(async (resolve, reject) => {\n      switch(type){\n        case \"ii\":\n          var auth = await AuthClient.create();\n          auth.login({\n            identityProvider: \"https://identity.ic0.app/\",\n            onSuccess: async () => {\n              var id = await auth.getIdentity()\n              resolve(processId(id, type));\n            },\n            onError : reject\n          });\n        break;\n        case \"private\":\n          localStorage.setItem('_m', optdata.mnemonic);\n          var id = mnemonicToId(optdata.mnemonic);\n          encrypt(optdata.mnemonic, id.getPrincipal().toString(), optdata.password).then(_em => {\n            localStorage.setItem('_em', _em);\n            resolve(processId(id, type));        \n          });\n        break;\n        case \"watch\":\n          resolve({\n            principal : optdata.principal,\n            type : type\n          });   \n        break;\n      }\n    });\n  },\n  load : (_id) => {\n    return new Promise(async (resolve, reject) => {\n      switch(_id.type){\n        case \"ii\":\n          var auth = await AuthClient.create();\n          var id = await auth.getIdentity();\n          if (id.getPrincipal().toString() != '2vxsx-fae') {\n            resolve(processId(id, _id.type)); \n          } else reject(\"Not logged in\");\n        break;\n        case \"private\":\n          var t = localStorage.getItem('_m');\n          if (!t){\n            reject(\"No seed\");\n          } else {\n            var mnemonic = t;\n            var id = mnemonicToId(mnemonic);\n            resolve(processId(id, _id.type));\n          }\n        break;\n        case \"watch\":\n          resolve({\n            principal : _id.principal,\n            type : _id.type\n          });   \n        break;\n      }\n    });\n  },\n  unlock : (_id, optdata) => {\n    return new Promise(async (resolve, reject) => {\n      StoicIdentity.load(_id).then(resolve).catch(async e => {\n        //Yup we should be here :-(\n        switch(_id.type){\n          case \"ii\":\n            var auth = await AuthClient.create();\n            auth.login({\n              identityProvider: \"https://identity.ic0.app/\",\n              onSuccess: async () => {\n                var id = await auth.getIdentity()\n                resolve(processId(id, _id.type));\n              },\n              onError : reject\n            });\n            break;\n          case \"private\":\n            var t = localStorage.getItem('_em');\n            if (!t) return reject(\"No encrypted data to decrypt\");\n            decrypt(t, _id.principal, optdata.password).then(mnemonic => {\n              localStorage.setItem('_m', mnemonic);\n              var id = mnemonicToId(mnemonic);\n              resolve(processId(id, _id.type));\n            }).catch(reject);\n            break;\n        }\n      });\n    });\n  },\n  lock : (_id) => {\n    return new Promise(async (resolve, reject) => {\n      switch(_id.type){\n        case \"ii\":\n            var auth = await AuthClient.create();\n            auth.logout();\n          break;\n        case \"private\":\n            localStorage.removeItem(\"_m\");\n          break;\n      }\n      resolve(true);\n    });\n  },\n  clear : (_id) => {\n    return new Promise(async (resolve, reject) => {\n      switch(_id.type){\n        case \"ii\":\n            var auth = await AuthClient.create();\n            auth.logout();\n          break;\n        case \"private\":\n            localStorage.removeItem(\"_m\");\n            localStorage.removeItem(\"_em\");\n          break;\n      }\n      resolve(true);\n    });\n  },\n  validatePrincipal : validatePrincipal,\n  validateMnemonic : bip39.validateMnemonic,\n  generateMnemonic : bip39.generateMnemonic,\n  validatePassword : (p) => {\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n    return re.test(p);\n  }\n}\r\nwindow.StoicIdentity = StoicIdentity;\nexport {StoicIdentity};","function fallbackCopyTextToClipboard(text) {\r\n  \r\n  var textArea = document.createElement(\"textarea\");\r\n  textArea.value = text;\r\n  \r\n  // Avoid scrolling to bottom\r\n  textArea.style.top = \"0\";\r\n  textArea.style.left = \"0\";\r\n  textArea.style.position = \"fixed\";\r\n\r\n  document.body.appendChild(textArea);\r\n  textArea.focus();\r\n  textArea.select();\r\n\r\n  try {\r\n    var successful = document.execCommand('copy');\r\n    var msg = successful ? 'successful' : 'unsuccessful';\r\n    console.log('Fallback: Copying text command was ' + msg);\r\n  } catch (err) {\r\n    console.error('Fallback: Oops, unable to copy', err);\r\n  }\r\n\r\n  document.body.removeChild(textArea);\r\n}\r\nfunction copyTextToClipboard(text) {\r\n  if (!navigator.clipboard) {\r\n    fallbackCopyTextToClipboard(text);\r\n    return;\r\n  }\r\n  navigator.clipboard.writeText(text).then(function() {\r\n    console.log('Async: Copying to clipboard was successful!');\r\n  }, function(err) {\r\n    console.error('Async: Could not copy text: ', err);\r\n  });\r\n}\r\nconst \r\nidentityTypes = {\r\n  'ii' : \"Internet Identity\",\r\n  'private' : \"Mnemonic Key\",\r\n  'watch' : \"Read-only\",\r\n},\r\nclipboardCopy = (text) => {\r\n  if (!navigator.clipboard) {\r\n    fallbackCopyTextToClipboard(text);\r\n    return;\r\n  }\r\n  navigator.clipboard.writeText(text).then(function() {\r\n    console.log('Async: Copying to clipboard was successful!');\r\n  }, function(err) {\r\n    console.error('Async: Could not copy text: ', err);\r\n  });\r\n},\r\nisHex = (h) => {\r\n  var regexp = /^[0-9a-fA-F]+$/;\r\n  return regexp.test(h);\r\n},\r\ncompressAddress = (a) => {\r\n  if (!a) return \"\";\r\n  if (a.length == 64 && isHex(a)) return a.substr(0, 40) + \"...\";\r\n  else {\r\n    var pp = a.split(\"-\");\r\n    if (pp.length <= 4) return a;\r\n    else {\r\n      return pp[0] + \"-\" + pp[1].substr(0, 3) + \"...\" + pp[pp.length-3].substr(2) + \"-\" + pp[pp.length-2] + \"-\" + pp[pp.length-1];\r\n    }\r\n  }\r\n},\r\ndisplayDate = (d) => {\r\n  return new Date(d).toString();\r\n},\r\nnumf = (n, d) => {\r\n  if (n === \"N/A\") return n;\r\n  d = (d ?? 2);\r\n  return n.toFixed(d).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n};\r\nexport {\r\n  clipboardCopy, compressAddress, displayDate, numf, identityTypes\r\n};","/* global BigInt */\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport extjs from '../ic/extjs.js';\r\nimport {StoicIdentity} from '../ic/identity.js';\r\nimport {validatePrincipal, validateAddress} from '../ic/utils.js';\r\nimport {compressAddress} from '../utils.js';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport default function SendForm(props) {\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const currentAccount = useSelector(state => state.currentAccount)\r\n  const identity = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity : {}));\r\n  const [open, setOpen] = React.useState(false);\r\n  const [step, setStep] = React.useState(0);\r\n  const [balance, setBalance] = React.useState(false);\r\n\r\n  const [amount, setAmount] = React.useState(0);\r\n  const [minFee, setMinFee] = React.useState(0);\r\n  const [fee, setFee] = React.useState(0);\r\n  const [to, setTo] = React.useState('');\r\n  \r\n  const [advanced, setAdvanced] = React.useState(false);\r\n  const [memo, setMemo] = React.useState('');\r\n  const [notify, setNotify] = React.useState(false);\r\n  \r\n  //cold API\r\n  const api = extjs.connect(\"https://boundary.ic0.app/\");\r\n\r\n  const error = (e) => {\r\n    props.error(e);\r\n  }\r\n  const review = () => {\r\n    if (isNaN(amount)) return error(\"Please enter a valid amount to send\");\r\n    if (isNaN(fee)) return error(\"Please enter a valid fee to use\");\r\n    if (fee != minFee) return error(\"The fee must be \" + minFee);\r\n    switch(props.data.symbol){\r\n      case \"ICP\":\r\n        if (!validateAddress(to)) return error(\"Please enter a valid address\");      \r\n      break;\r\n      case \"HZLD\":\r\n        if (!validatePrincipal(to)) return error(\"Please enter a valid principal to send to\");      \r\n      break;\r\n      default:\r\n        if (!validateAddress(to) && !validatePrincipal(to)) return error(\"Please enter a valid address to send to\");      \r\n      break;\r\n    }\r\n    if ((amount+fee) > balance)  return error(\"You have insufficient \" + props.data.symbol); \r\n    setStep(1);\r\n  }\r\n  const submit = () => {\r\n    //Submit to blockchain here\r\n    var _from_principal = identity.principal;\r\n    var _from_sa = currentAccount;\r\n    var _to_user = to;\r\n    var _amount = BigInt(amount*(10**props.data.decimals));\r\n    var _fee = BigInt(fee*(10**props.data.decimals));\r\n    var _memo = memo;\r\n    var _notify = false;//hardcoded false for now\r\n    \r\n    //Load signing ID\r\n    const id = StoicIdentity.getIdentity(identity.principal);\r\n    if (!id) return error(\"Something wrong with your wallet, try logging in again\");\r\n    \r\n    props.loader(true);\r\n    handleClose();\r\n    \r\n    //hot api, will sign as identity - BE CAREFUL\r\n    extjs.connect(\"https://boundary.ic0.app/\", id).token(props.data.id).transfer(_from_principal, _from_sa, _to_user, _amount, _fee, _memo, _notify).then(r => {\r\n      if (r) {\r\n        return props.alert(\"Transaction complete\", \"Your transfer was sent successfully\");\r\n      } else {        \r\n        return error(\"Something went wrong with this transfer\");\r\n      }\r\n    }).catch(e => {\r\n      return error(\"There was an error: \" + e);\r\n    }).finally(() => {\r\n      props.loader(false);\r\n    });\r\n  };\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setStep(0);\r\n    setAmount(0);\r\n    setMinFee(0);\r\n    setFee(0);\r\n    setBalance(false);\r\n    setTo('');\r\n    setAdvanced(false);\r\n    setMemo('');\r\n    setNotify(false);\r\n  };\r\n  React.useEffect(() => {\r\n    api.token(props.data.id).fee().then(f => {\r\n      setMinFee(f/10**(props.data.decimals));\r\n      setFee(f/10**(props.data.decimals));\r\n    });\r\n    api.token(props.data.id).getBalance(props.address, identity.principal).then(b => {\r\n      setBalance(Number(b)/(10**props.data.decimals));\r\n    });\r\n  }, [props.data.id, open]);\r\n\r\n  return (\r\n    <>\r\n      {React.cloneElement(props.children, {onClick: handleClick})}\r\n      <Dialog open={open} onClose={handleClose}  maxWidth={'sm'} fullWidth >\r\n        <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Send {props.data.name} Tokens ({props.data.symbol})</DialogTitle>\r\n        {step == 0 ?\r\n          <DialogContent>\r\n            <DialogContentText style={{textAlign:'center',fontWeight:'bold'}}>Please enter the recipient address and amount that you wish to send below.</DialogContentText>\r\n            <>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"Address of the Recipient\"\r\n                value={to}\r\n                onChange={(e) => setTo(e.target.value)}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                style={{width:'49%', marginRight:'2%'}}\r\n                margin=\"dense\"\r\n                label={\"Amount of \" + props.data.symbol + \" to Send\"}\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                type=\"text\"\r\n              />\r\n              { minFee > 0 ?\r\n              <TextField\r\n                style={{width:'49%'}}\r\n                margin=\"dense\"\r\n                label=\"Fee\"\r\n                value={fee}\r\n                onChange={(e) => setFee(e.target.value)}\r\n                type=\"text\"\r\n              /> : \"\" }\r\n              <DialogContentText style={{fontSize:'small',textAlign:'center', marginTop:\"20px\"}}>\r\n                { balance !== false ? \"Balance: \"+balance+\" \"+props.data.symbol +\" \": \"\"}\r\n                { minFee > 0 ? \"Min Fee: \"+minFee+\" \"+props.data.symbol : \"\"}\r\n              </DialogContentText>\r\n              { advanced ?\r\n                <a style={{cursor: 'pointer', fontWeight:'bold'}} onClick={() => setAdvanced(false)}>Hide Advanced Options</a>\r\n              :\r\n                <a style={{cursor: 'pointer', fontWeight:'bold'}} onClick={() => setAdvanced(true)}>Show Advanced Options</a>\r\n              }\r\n            </>\r\n            { advanced ?\r\n            <>\r\n              <TextField\r\n                margin=\"dense\"\r\n                multiline\r\n                rows='2'\r\n                rowsMax='4'\r\n                label=\"Optional Memo\"\r\n                value={memo}\r\n                onChange={(e) => setMemo(e.target.value)}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              {/*\r\n              <FormControlLabel\r\n                control={<Switch checked={notify} onChange={(event) => setNotify(event.target.checked)} name=\"notify\" />}\r\n                label=\"Notify\"\r\n              />*/}\r\n            </> : \"\" }\r\n          </DialogContent>\r\n        :\r\n          <DialogContent>\r\n            <DialogContentText style={{textAlign:'center'}}>\r\n            Please confirm that you are about to send <br />\r\n            <strong style={{color:'red'}}>{amount} {props.data.symbol}</strong><br /> \r\n            from <strong style={{color:'red'}}>{compressAddress(props.address)}</strong><br />\r\n            to <strong style={{color:'red'}}>{compressAddress(to)}</strong><br />\r\n            { fee > 0 ? \" using a fee of \" + fee : \"\"} \r\n            </DialogContentText>\r\n            <DialogContentText style={{textAlign:'center'}}>\r\n              <strong>All transactions are irreversible, so ensure the above details are correct before you continue.</strong>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          {step == 0 ?\r\n            <Button onClick={review} color=\"primary\">Review Transaction</Button>\r\n            :\r\n            <Button onClick={submit} color=\"primary\">Confirm Transaction</Button>\r\n          }\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Timestamp from 'react-timestamp';\r\nimport extjs from '../ic/extjs.js';\r\n\r\nvar intervalId = 0;\r\nconst api = extjs.connect(\"https://boundary.ic0.app/\");\r\nexport default function Transactions(props) {\r\n  const [transactions, setTransactions] = React.useState(false);\r\n  const styles = {\r\n    empty : {\r\n      maxWidth:400,\r\n      margin : \"0 auto\",\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  };\r\n  const updateTransactions = (_id, _address) => {\r\n    //ugly set new code?\r\n    var id = JSON.parse(JSON.stringify(_id));\r\n    var address = JSON.parse(JSON.stringify(_address));\r\n    return api.token(id).getTransactions(address).then(txs => {\r\n      return [txs, id, address];\r\n    });\r\n  }\r\n  const stopPoll = () => {\r\n    if (intervalId) clearInterval(intervalId);\r\n    intervalId = 0;\r\n  }\r\n  const startPoll = () => {\r\n    if (intervalId) stopPoll();\r\n    fetchTx();\r\n    intervalId = setInterval(fetchTx, 10000);\r\n  };\r\n  const fetchTx = () => {\r\n    console.log(\"Fetching for \" + props.data.id);\r\n    updateTransactions(props.data.id, props.address).then(txs => {\r\n      console.log(\"Fetched for \" + txs[1]);\r\n      console.log(\"Current \" + props.data.id);\r\n      if (txs[1] != props.data.id || txs[2] != props.address) return;\r\n      setTransactions(txs[0]);\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    startPoll();\r\n    return () => {\r\n      stopPoll();\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    let canceled = false;\r\n    \r\n    stopPoll();\r\n    setTimeout( () => {\r\n      setTransactions(false);\r\n      startPoll();\r\n    }, 100);\r\n    return () => (canceled = true);\r\n  }, [props.address, props.data.id]);\r\n\r\n  return (\r\n    <>\r\n      {transactions === false ?\r\n      <div style={styles.empty}>\r\n        <Typography paragraph style={{paddingTop:20,fontWeight:\"bold\"}} align=\"center\">\r\n          Loading transactions...\r\n        </Typography>\r\n      </div> : (transactions.length === 0 ?\r\n        <div style={styles.empty}>\r\n          <Typography paragraph style={{paddingTop:20,fontWeight:\"bold\"}} align=\"center\">\r\n            No transactions available\r\n          </Typography>\r\n        </div> :\r\n        <TableContainer component={Paper}>\r\n          <Table style={styles.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell align=\"right\">Amount</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {transactions.map((tx, i) => (\r\n                <TableRow key={props.data.id + props.address + tx.hash + i}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Timestamp relative autoUpdate date={tx.timestamp} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {tx.from == props.address ?\r\n                      <>Sent <strong>{tx.amount} {props.data.symbol}</strong> to {tx.to} with a <strong>{tx.fee} {props.data.symbol}</strong> Fee<br />(<a href={\"https://ic.rocks/transaction/\"+tx.hash} target=\"_blank\">View Transaction</a>)</> :\r\n                      <>Received <strong>{tx.amount} {props.data.symbol}</strong> from {tx.from}<br />(<a href=\"https://ic.rocks/transaction/771f1ebeb599d34429cff7d7a5148864d238a0e4081166f50ac20e401d6e1b26\" target=\"_blank\">View Transaction</a>)</> }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {tx.from == props.address ? \r\n                      <span style={{color:'red',fontWeight:'bold'}}>-{tx.amount + tx.fee}</span> : \r\n                      <span style={{color:'#00b894',fontWeight:'bold'}}>+{tx.amount}</span>\r\n                    }\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>) }\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainFab(props) {\r\n  const classes = useStyles();\r\n  const style = {\r\n      margin: 0,\r\n      top: 'auto',\r\n      right: 20,\r\n      bottom: 20,\r\n      left: 'auto',\r\n      position: 'fixed',\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab style={style} {...props}>\r\n        {props.children}\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function InputForm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(props.defaultValue ?? \"\");\r\n  const [secondaryValue, setSecondaryValue] = React.useState(props.defaultSecondaryValue ?? \"\");\r\n\r\n  const submit = () => {\r\n    if (typeof props.onClick != 'undefined') props.onClick(value, secondaryValue);\r\n    setOpen(false);\r\n    setValue(props.defaultValue ?? \"\");\r\n    setSecondaryValue(props.defaultSecondaryValue ?? \"\");\r\n  };\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {React.cloneElement(props.children, {onClick: handleClick})}\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.content}</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label={props.inputLabel}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          { props.secondaryInput ? \r\n            <TextField\r\n              margin=\"dense\"\r\n              label={props.secondaryInput}\r\n              value={secondaryValue}\r\n              onChange={(e) => setSecondaryValue(e.target.value)}\r\n              type=\"text\"\r\n              fullWidth\r\n            /> : \"\" }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={submit} color=\"primary\">{props.buttonLabel}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Blockie from '../components/Blockie';\r\nimport SnackbarButton from '../components/SnackbarButton';\r\nimport TokenCard from '../components/TokenCard';\r\nimport SendForm from '../components/SendForm';\r\nimport AddTokenCard from '../components/AddTokenCard';\r\nimport Transactions from '../components/Transactions';\r\nimport MainFab from '../components/MainFab';\r\nimport InputForm from '../components/InputForm';\r\nimport extjs from '../ic/extjs.js';\r\nimport {validatePrincipal} from '../ic/utils.js';\r\n\r\nimport { clipboardCopy } from '../utils';\r\n\r\n\r\nconst api = extjs.connect(\"https://boundary.ic0.app/\");\r\nfunction AccountDetail(props) {\r\n  const currentToken = useSelector(state => state.currentToken)\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const currentAccount = useSelector(state => state.currentAccount)\r\n  const idtype = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity.type : \"\"));\r\n  const account = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].accounts[currentAccount] : {}));\r\n  const [tokens, setTokens] = React.useState(account.tokens);\r\n  \r\n  const dispatch = useDispatch()\r\n  React.useEffect(() => {\r\n    setTokens(account.tokens);\r\n  }, [currentToken, currentAccount, currentPrincipal]);\r\n  \r\n  const theme = useTheme();\r\n  const styles = {\r\n    root : {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    grid: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    }\r\n  };\r\n  const error = (e) => {\r\n    props.alert(\"There was an error\", e);\r\n  };\r\n  const alert = (t, m) => {\r\n    props.alert(t, m);\r\n  };\r\n  \r\n  const changeToken = (i) => {\r\n    dispatch({ type: 'currentToken', payload: {index:i}});\r\n  }\r\n  const editAccountName = (name) => {\r\n    if (!name) return error(\"Please enter a valid account name\");\r\n    if (name.length > 20) return error(\"Max length or account names is 20 characters\");\r\n    dispatch({ type: 'account/edit', payload: {name:name}});\r\n  };\r\n  const addToken = (cid) => {\r\n    if (!validatePrincipal(cid)) return error(\"Please enter a valid canister ID\");\r\n    if (account.tokens.findIndex(x => x.id === cid) >= 0) return error(\"Canister has already been added\");\r\n    props.loader(true);\r\n    api.token(cid).getMetadata().then(md => {\r\n      if (md.type != 'fungible') return error(\"NFT's are not supported yet\");\r\n      md.id = cid;\r\n      dispatch({ type: 'account/token/add', payload: {\r\n        metadata : md\r\n      }});\r\n      props.loader(false);\r\n      dispatch({ type: 'currentToken', payload: {index:account.tokens.length}});\r\n    });\r\n  };\r\n  return (\r\n    <div style={styles.root}>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar style={{width:60, height:60}}>\r\n              <Blockie address={account.address} />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText \r\n            style={{paddingLeft:20}}\r\n            primaryTypographyProps={{noWrap:true, variant:'h4'}} \r\n            secondaryTypographyProps={{noWrap:true, variant:'subtitle1'}} \r\n            primary={account.name}\r\n            secondary={\r\n              <>\r\n                {account.address}\r\n                <SnackbarButton\r\n                  message=\"Address Copied\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  onClick={() => clipboardCopy(account.address)}\r\n                >\r\n                  <IconButton size=\"small\" edge=\"end\" aria-label=\"copy\">\r\n                    <FileCopyIcon style={{ fontSize: 18 }} />\r\n                  </IconButton>\r\n                </SnackbarButton>\r\n              </>\r\n            }              />\r\n          <ListItemSecondaryAction>\r\n            <InputForm\r\n              onClick={editAccountName}\r\n              title=\"Change Account Name\"\r\n              inputLabel=\"Account Name\"\r\n              secondaryInput={false}\r\n              content=\"Enter a new friendly name for this account.\"\r\n              defaultValue={account.name}\r\n              buttonLabel=\"Save\"\r\n            >\r\n              <IconButton edge=\"end\" aria-label=\"edit\">\r\n                <EditIcon />\r\n              </IconButton>\r\n            </InputForm>\r\n            <IconButton href={\"https://ic.rocks/account/\"+account.address} target=\"_blank\" edge=\"end\" aria-label=\"search\">\r\n              <LaunchIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <div style={styles.grid}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {tokens.map((token, index) => {\r\n            return (<TokenCard key={account.address + token.symbol} address={account.address} data={token} onClick={() => changeToken(index)} selected={index == currentToken} />)\r\n          })}\r\n          <InputForm\r\n            onClick={addToken}\r\n            title=\"Add token\"\r\n            inputLabel=\"Canister ID\"\r\n            content=\"Enter the Canister ID for the token you wish to add\"\r\n            buttonLabel=\"Add\"\r\n          >\r\n            <Fab style={{verticalAlign: 'center', marginRight:20}} color=\"primary\" aria-label=\"add\">\r\n              <AddIcon />\r\n            </Fab>\r\n          </InputForm>\r\n        </Grid>\r\n      </div>\r\n      {currentToken != 0 ?\r\n      <p style={{marginLeft:'15px', color:'rgba(0, 0, 0, 0.54)'}}>\r\n        <strong>Token ID:</strong> {account.tokens[currentToken].id}\r\n        <SnackbarButton\r\n          message=\"Token ID Copied\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          onClick={() => clipboardCopy(account.tokens[currentToken].id)}\r\n        >\r\n          <IconButton size=\"small\" edge=\"end\" aria-label=\"copy\">\r\n            <FileCopyIcon style={{ fontSize: 14 }} />\r\n          </IconButton>\r\n        </SnackbarButton>\r\n      </p>: \"\"}\r\n      <Transactions data={account.tokens[currentToken]} address={account.address} />\r\n      {idtype == 'watch' ? \"\" :\r\n        <SendForm alert={alert} loader={props.loader} error={error} address={account.address} data={account.tokens[currentToken]}>\r\n          <MainFab color=\"primary\" aria-label=\"send\"><SendIcon /></MainFab>\r\n        </SendForm>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountDetail;","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MainFab from '../components/MainFab';\r\nimport InputForm from '../components/InputForm';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport SnackbarButton from '../components/SnackbarButton';\r\nimport Blockie from '../components/Blockie';\r\nimport { clipboardCopy } from '../utils';\r\nimport {validatePrincipal, validateAddress} from '../ic/utils.js';\r\nfunction AddressBook(props) {\r\n  const addresses = useSelector(state => state.addresses)\r\n  const dispatch = useDispatch()\r\n  \r\n  const editAddress = (name, address, index) => {\r\n    dispatch({ type: 'addresses/edit', payload: {\r\n      index : index,\r\n      name : name,\r\n      address : address,\r\n    }});\r\n  };\r\n  const error = (e) => {\r\n    props.alert(\"There was an error\", e);\r\n  };\r\n  const addAddress = (name, address) => {\r\n    if (!name) return error(\"Please enter a valid contact name\");\r\n    if (name.length > 30) return error(\"Max length or contact names is 30 characters\");\r\n    if (!validateAddress(address) && !validatePrincipal(address)) return error(\"Please enter a valid address or principal\");\r\n    var a = dispatch({ type: 'addresses/add', payload: {\r\n      name : name,\r\n      address : address,\r\n    }});\r\n  };\r\n  const deleteAddress = (id) => {\r\n    dispatch({ type: 'addresses/delete', payload: id});\r\n  };\r\n  \r\n  const theme = useTheme();\r\n  const styles = {\r\n    root : {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    empty : {\r\n      maxWidth:400,\r\n      margin : \"0 auto\",\r\n      paddingTop : 30\r\n    },\r\n\r\n    largeIcon: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      { addresses.length > 0 ?\r\n        <List>\r\n          {addresses.map((contact, index) => {\r\n            return (\r\n              <ListItem key={index}>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <Blockie address={contact.address} />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText \r\n                  primaryTypographyProps={{noWrap:true}} \r\n                  secondaryTypographyProps={{noWrap:true}} \r\n                  primary={contact.name}\r\n                  secondary={\r\n                    <>\r\n                      {contact.address}\r\n                      <SnackbarButton\r\n                        message=\"Address Copied\"\r\n                        anchorOrigin={{\r\n                          vertical: 'bottom',\r\n                          horizontal: 'left',\r\n                        }}\r\n                        onClick={() => clipboardCopy(contact.address)}\r\n                      >\r\n                        <IconButton size=\"small\" edge=\"end\" aria-label=\"copy\">\r\n                          <FileCopyIcon style={{ fontSize: 18 }} />\r\n                        </IconButton>\r\n                      </SnackbarButton>\r\n                    </>\r\n                  } />\r\n                <ListItemSecondaryAction>\r\n                  <InputForm\r\n                    onClick={(name, address) => editAddress(name, address, index)}\r\n                    title=\"Edit contact from address book\"\r\n                    inputLabel=\"Contact Name\"\r\n                    secondaryInput=\"Contact Address\"\r\n                    content=\"Update the details of a saved contact\"\r\n                    buttonLabel=\"Save\"\r\n                    defaultValue={contact.name} \r\n                    defaultSecondaryValue={contact.address} \r\n                  >\r\n                    <IconButton edge=\"end\" aria-label=\"edit\">\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </InputForm>\r\n                  <IconButton onClick={() => deleteAddress(index)} edge=\"end\" aria-label=\"delete\">\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List> :\r\n        <div style={styles.empty}>\r\n          <Typography paragraph align=\"center\">\r\n            <PeopleIcon style={styles.largeIcon} />\r\n          </Typography>\r\n          <Typography paragraph style={{fontWeight:\"bold\"}} align=\"center\">\r\n            Your address book is empty\r\n          </Typography>\r\n          <Typography paragraph align=\"center\">\r\n            You can create contacts in your address book to associate addresses with easy to read names.\r\n          </Typography>\r\n        </div>\r\n      }\r\n      <InputForm\r\n        onClick={addAddress}\r\n        title=\"Add contact to address book\"\r\n        inputLabel=\"Contact Name\"\r\n        secondaryInput=\"Contact Address\"\r\n        content=\"Save names and addresses of common people and services.\"\r\n        buttonLabel=\"Save\"\r\n      >\r\n        <MainFab color=\"primary\" aria-label=\"add\"><AddIcon /></MainFab>\r\n      </InputForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressBook;","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\n\r\nfunction Neurons(props) {\r\n  const theme = useTheme();\r\n  const styles = {\r\n    root : {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    empty : {\r\n      maxWidth:400,\r\n      margin : \"0 auto\",\r\n      paddingTop : 30\r\n    },\r\n\r\n    largeIcon: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.root}>\r\n      <div style={styles.empty}>\r\n        <Typography paragraph align=\"center\">\r\n          <AllInclusiveIcon style={styles.largeIcon} />\r\n        </Typography>\r\n        <Typography paragraph align=\"center\">\r\n          Sorry, neuron management is still cooking away over at Toniq Labs. Please be patient!\r\n        </Typography>\r\n        \r\n        \r\n        {/*\r\n        <Typography paragraph align=\"center\">\r\n          <AllInclusiveIcon style={styles.largeIcon} />\r\n        </Typography>\r\n        <Typography paragraph style={{fontWeight:\"bold\"}} align=\"center\">\r\n          No neurons available\r\n        </Typography>\r\n        <Typography paragraph align=\"center\">\r\n          You can create create and manage neurons directly from Stoic.\r\n        </Typography>*/}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Neurons;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport UsbIcon from '@material-ui/icons/Usb';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { clipboardCopy, identityTypes } from '../utils';\r\n\r\nimport Blockie from '../components/Blockie';\r\nimport SnackbarButton from '../components/SnackbarButton';\r\n\r\nfunction Settings(props) {\r\n  const [assets, setAssets] = React.useState([]);\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const accounts = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].accounts : []));\r\n  const identity = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity : {}));\r\n  const principals = useSelector(state => state.principals);\r\n  const makeAssets = () => {  \r\n    var assets = ['ICP'];\r\n    accounts.map(account => {\r\n      account.tokens.map(token => {\r\n        if (assets.indexOf(token.symbol) < 0) assets.push(token.symbol);\r\n      });\r\n    });\r\n    setAssets(assets);\r\n  }\r\n  const clearWallet = () => {\r\n    props.confirm(\"Please confirm\", \"You are about to clear your wallet, which will remove all data from this device. Are you sure you want to continue?\").then(v => {\r\n      if (v) props.clearWallet();\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    makeAssets();\r\n  }, [currentPrincipal]);\r\n  return (\r\n    <>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"settings-list\"\r\n        subheader={\r\n          <ListSubheader id=\"nested-list-subheader\">\r\n            Active Principal\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar style={{width:60, height:60}}>\r\n              <Blockie address={identity.principal ?? ''} />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText \r\n            style={{paddingLeft:20}}\r\n            primaryTypographyProps={{noWrap:true}} \r\n            primary={\r\n              <>\r\n                {identity.principal}\r\n                <SnackbarButton\r\n                  message=\"Principal Copied\"\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  }}\r\n                  onClick={() => clipboardCopy(identity.principal)}\r\n                >\r\n                  <IconButton size=\"small\" edge=\"end\" aria-label=\"edit\">\r\n                    <FileCopyIcon  style={{ fontSize: 18 }} />\r\n                  </IconButton>\r\n                </SnackbarButton>\r\n              </>\r\n            }\r\n            secondary={\r\n              <>\r\n                <>{identityTypes[identity.type]}<br />{accounts.length + (accounts.length === 1 ? \" Account\" : \" Accounts\")} containing {assets.join(\", \")}</>\r\n              </>\r\n            } />\r\n          <ListItemSecondaryAction>\r\n            <IconButton href={\"https://ic.rocks/principal/\"+identity.principal} target=\"_blank\" edge=\"end\" aria-label=\"search\">\r\n              <LaunchIcon />\r\n            </IconButton>\r\n            { principals.length > 1 ?\r\n            <IconButton edge=\"end\" aria-label=\"search\">\r\n              <DeleteIcon />\r\n            </IconButton> : \"\" }\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      {principals.length > 1 ?\r\n        <><List\r\n          component=\"nav\"\r\n          aria-labelledby=\"settings-list\"\r\n          subheader={\r\n            <ListSubheader id=\"nested-list-subheader\">\r\n              Other Principals\r\n            </ListSubheader>\r\n          }\r\n        >\r\n          {principals.map((principal, i) => {\r\n            if (i == currentPrincipal) return;\r\n            return (\r\n            <ListItem button>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <Blockie address={principal.identity.principal ?? ''} />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText \r\n                primaryTypographyProps={{noWrap:true}} \r\n                primary={principal.identity.principal}\r\n                secondary={\r\n                  <>\r\n                    <>{identityTypes[principal.identity.type]}</>\r\n                  </>\r\n                } />\r\n            </ListItem>) \r\n          })}\r\n        </List>\r\n        <Divider /> </>: \"\" }\r\n        {/*\r\n      <List component=\"nav\" aria-label=\"secondary add principal\">\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText \r\n            primary=\"Create Principal\" \r\n            secondary=\"I want to create a new account by generating a random seed phrase\" \r\n          />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <GetAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText \r\n            primary=\"Import Principal\" \r\n            secondary=\"I want to add an existing account using a seed phrase, or as a 'read-only' account\" \r\n          />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AllInclusiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText \r\n            primary=\"Link Internet Identitiy\" \r\n            secondary=\"I want to link create an account using an Internet Identity\" \r\n          />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <UsbIcon />\r\n          </ListItemIcon>\r\n          <ListItemText \r\n            primary=\"Connect Hardware Wallet\" \r\n            secondary=\"I want to import an account from my Ledger or Trezor device\" \r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      */}\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"settings-list\"\r\n        subheader={\r\n          <ListSubheader id=\"nested-list-subheader\">\r\n            Advanced Settings\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <ListItem button onClick={clearWallet}>\r\n          <ListItemText \r\n            primaryTypographyProps={{noWrap:true, color : \"error\"}} \r\n            primary=\"Remove this wallet from this device\"/>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AccountDrawer from '../components/AccountDrawer';\r\nimport SnackbarButton from '../components/SnackbarButton';\r\n\r\nimport AccountDetail from '../views/AccountDetail';\r\nimport AddressBook from '../views/AddressBook';\r\nimport Neurons from '../views/Neurons';\r\nimport Settings from '../views/Settings';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  toolbarButtons: {\r\n    marginLeft: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n}));\r\n\r\n\r\nvar UNLOCKED = false, ACTIVE = false, INTV = false;\r\n  const routes = {\r\n    'accountDetail' : {\r\n      title : \"Account Details\",\r\n      view : AccountDetail\r\n    },\r\n    'neurons' : {\r\n      title : \"Neuron Management\",\r\n      view : Neurons\r\n    },\r\n    'addressBook' : {\r\n      title : \"Address Book\",\r\n      view : AddressBook\r\n    },\r\n    'settings' : {\r\n      title : \"Settings\",\r\n      view : Settings\r\n    },\r\n  };\r\n//Helpers\r\n\r\n\r\nfunction Wallet(props) {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [route, setRoute] = React.useState('accountDetail');\r\n  const [toolbarTitle, setToolbarTitle] = React.useState(routes[route].title);\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const renderView = (r) => {\r\n    switch(r){\r\n      case \"accountDetail\":\r\n        return React.createElement(routes[r].view, {alert : props.alert, confirm : props.confirm, loader : props.loader})\r\n      case \"settings\":\r\n        return React.createElement(routes[r].view, {alert : props.alert, confirm : props.confirm, clearWallet : clearWallet})\r\n      break;\r\n      default:\r\n        return React.createElement(routes[r].view, {alert : props.alert, confirm : props.confirm})\r\n      break;\r\n    }\r\n  }\r\n  const changeRoute = (r, i) => {\r\n    setToolbarTitle(routes[r].title);\r\n    setRoute(r);\r\n    if (typeof i !== 'undefined') dispatch({ type: 'currentAccount', payload: {index:i}});\r\n  };\r\n  \r\n  const lockWallet = () => {\r\n    props.logout();\r\n  };\r\n  const clearWallet = () => {\r\n    props.remove();\r\n  };\r\n  const wallet = {}; //Load in JS api?\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          \r\n          <Typography variant=\"h6\" noWrap>\r\n            {toolbarTitle}\r\n          </Typography>\r\n          <div className={classes.toolbarButtons}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"settings\"   \r\n              edge=\"end\"\r\n              onClick={() => changeRoute('settings')}\r\n            >\r\n              <AccountCircleIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AccountDrawer lockWallet={lockWallet} changeRoute={changeRoute} onClose={handleDrawerToggle} open={mobileOpen} />\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n          {renderView(route)}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wallet;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport UsbIcon from '@material-ui/icons/Usb';\r\n\r\nexport default function ConnectList(props) {\r\n  const handleClick = (t) => {\r\n    props.handler(t);\r\n  };\r\n  return (\r\n    <List component=\"nav\" aria-label=\"secondary add principal\">\r\n      <ListItem button onClick={() => handleClick('create') }>\r\n        <ListItemIcon>\r\n          <AddIcon />\r\n        </ListItemIcon>\r\n        <ListItemText \r\n          primary=\"Create a new Wallet\" \r\n          secondary=\"I want to create a new wallet by generating a random seed phrase\" \r\n        />\r\n        \r\n      </ListItem>\r\n      <ListItem button onClick={() => handleClick('import') }>\r\n        <ListItemIcon>\r\n          <GetAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText \r\n          primary=\"Import an existing Wallet\" \r\n          secondary=\"I want to recover an existing wallet using a seed phrase\"\r\n        />\r\n      </ListItem>\r\n      <ListItem button onClick={() => handleClick('link') }>\r\n        <ListItemIcon>\r\n          <AllInclusiveIcon />\r\n        </ListItemIcon>\r\n        <ListItemText \r\n          primary=\"Link your Internet Identitiy\" \r\n          secondary=\"I want to link create a wallet using an Internet Identity\" \r\n        />\r\n      </ListItem>\r\n      <ListItem button onClick={() => handleClick('connect') }>\r\n        <ListItemIcon>\r\n          <UsbIcon />\r\n        </ListItemIcon>\r\n        <ListItemText \r\n          primary=\"Connect Hardware Wallet\" \r\n          secondary=\"I want to import a wallet from my Ledger or Trezor device\" \r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport UsbIcon from '@material-ui/icons/Usb';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {StoicIdentity} from '../ic/identity.js';\r\n\r\nconst tips = [\r\n  \"When accessing this wallet, always type the URL into the browser address bar yourself or use a bookmark that you yourself created. Never trust links posted on social media, in search results, sent in emails or listed on other websites.\",\r\n  \"If your browser gives you any sort of security warning about this web wallet, get in touch with us and report it. Do not ignore the warning nor enter your mnemonic secret!\",\r\n  \"Only use your own devices when accessing your accounts. Do not enter your mnemonic secret on untrustworthy devices (public computers, friends computers/phones, etc) as they might be littered with malware and keyloggers.\",\r\n  \"Always keep your operating system, anti-virus software and browser up to date with latest security updates.\",\r\n  \"If possible, prefer hardware wallets over mnemonic secret for storing larger amounts of RISE.\",\r\n];\r\nvar type = '';\r\nexport default function WalletDialog(props) {\r\n  const [route, setRoute] = React.useState(props.initialRoute);\r\n  const [newMnemonic, setNewMnemonic] = React.useState('');\r\n  const [mnemonic, setMnemonic] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [password2, setPassword2] = React.useState('');\r\n  const [address, setAddress] = React.useState('');\r\n  const [tipsIndex, setTipsIndex] = React.useState(1);\r\n  React.useEffect(() => {\r\n    setRoute(props.initialRoute);\r\n  }, [props.initialRoute]);\r\n  \r\n  const cancel = () => {\r\n    type = '';\r\n    setTipsIndex(1);\r\n    setRoute(\"\");\r\n    setNewMnemonic(\"\");\r\n    setMnemonic(\"\");\r\n    setPassword(\"\");\r\n    setPassword2(\"\");\r\n    setAddress(\"\");\r\n    props.cancel();\r\n  }\r\n  const error = (e) => {\r\n    props.alert(\"There was an error\", e);\r\n  }\r\n  const showNewMnemonic = () => {\r\n    setTipsIndex(1);\r\n    setRoute(\"newMnemonic\");\r\n    type = 'create';\r\n    setNewMnemonic(StoicIdentity.generateMnemonic());\r\n  }\r\n  const showRecoverMnemonic = () => {\r\n    setRoute(\"confirmMnemonic\");\r\n    type = 'import';\r\n  }  \r\n  const showAddress = () => {\r\n    setRoute(\"address\");\r\n    type = 'watch';\r\n  }\r\n  \r\n  const confirmAddress = () => {\r\n    if (!StoicIdentity.validatePrincipal(address)) return error(\"Please enter a valid principal\");\r\n    submit();\r\n  }\r\n  const confirmMnemonic = () => {\r\n    if (!StoicIdentity.validateMnemonic(mnemonic)) return error(\"The mnemonic you entered is not valid\"); //show error\r\n    if (type == 'create' && mnemonic !== newMnemonic) return error(\"The mnemonic you entered does not match the one displayed\"); //show error\r\n    setRoute(\"passwords\");\r\n  };\r\n  const confirmPasswords = () => {\r\n    if (password !== password2) return error(\"Your passwords do not match\");\r\n    if (!StoicIdentity.validatePassword(password)) return error(\"Password is invalid, please try again\");\r\n    submit();\r\n  }\r\n  const submit = () => {\r\n    var od = {}, t = '';\r\n    switch(type) {\r\n      case \"create\":\r\n      case \"import\":\r\n        t = 'private';\r\n        od.mnemonic = mnemonic;\r\n        od.password = password;\r\n      break;\r\n      case \"watch\":\r\n        t = 'watch';\r\n        od.principal = address;\r\n      break;\r\n    };\r\n    props.submit(t,od);\r\n    //Clear\r\n    type = '';\r\n    setTipsIndex(1);\r\n    setRoute(\"\");\r\n    setNewMnemonic(\"\");\r\n    setMnemonic(\"\");\r\n    setPassword(\"\");\r\n    setPassword2(\"\");\r\n    setAddress(\"\");\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      { route == 'tips' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Security Tips</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>Things to keep in mind to increase the security of your funds:</strong></p>\r\n            <ul>\r\n            {tips.map( (t,i) => {\r\n              if (i >= tipsIndex) return \"\";\r\n              return(<li key={i}>{t}</li>)\r\n            })}\r\n            </ul>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n            {tipsIndex < tips.length ?\r\n            <Button onClick={() => setTipsIndex(tipsIndex+1)} color=\"primary\">Next Tip</Button>\r\n            :\r\n            <Button onClick={showNewMnemonic} color=\"primary\">Continue</Button> }\r\n          </DialogActions> \r\n        </Dialog>\r\n      </>:\"\"}\r\n      { route == 'import' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Select Import Type</DialogTitle>\r\n          <DialogContent>\r\n            <List component=\"nav\" aria-label=\"secondary add principal\">\r\n              <ListItem button onClick={showRecoverMnemonic}>\r\n                <ListItemIcon>\r\n                  <VpnKeyIcon />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Import using a seed phrase\" \r\n                  secondary=\"Enter your mnemonic seed to recover full access to your wallet\" \r\n                />\r\n                \r\n              </ListItem>\r\n              <ListItem button onClick={showAddress}>\r\n                <ListItemIcon>\r\n                  <VisibilityIcon />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Read only account\" \r\n                  secondary=\"Enter the address of a wallet you would like to add, but not spend from\"\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n          </DialogActions> \r\n        </Dialog>\r\n      </>:\"\"}\r\n      { route == 'newMnemonic' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Write down your seed phrase</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>This is your 12 word seed phrase:</strong></p>\r\n            <div style={{textAlign:'center'}}>\r\n              {newMnemonic.split(\" \").map((w, i) => {\r\n                return (<span key={i} style={{fontSize:'large', display:'inline-block', padding:'5px 15px'}}>{w}{i < 11 ? <>&nbsp;</> : \"\"}</span>);\r\n              })}\r\n            </div>\r\n            <p>Write your mnemonic down on a physical piece of paper and store it somewhere safe and private. Anyone who knows this can transfer funds out of your account.</p>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n            <Button onClick={() =>  setRoute(\"confirmMnemonic\")} color=\"primary\">Continue</Button>\r\n          </DialogActions> \r\n        </Dialog>\r\n      </>:\"\"}\r\n      { route == 'confirmMnemonic' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Confirm your mnemonic seed</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>Please confirm your 12 word seed phrase:</strong></p>\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Confirm Mnemonic Seed\"\r\n              multiline\r\n              fullWidth\r\n              value={mnemonic}\r\n              rows={2}\r\n              onChange={(e) => setMnemonic(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n            <Button onClick={confirmMnemonic} color=\"primary\">Continue</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>:\"\"}\r\n      { route == 'address' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Enter the Principal to watch</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>Please enter a valid Principal (e.g. 4opr7-aaepd-uw2ok...)</strong></p>\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Principal\"\r\n              fullWidth\r\n              value={address}\r\n              required\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n            <Button onClick={confirmAddress} color=\"primary\">Continue</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>:\"\"}\r\n      { route == 'passwords' ?\r\n      <>\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Enter a password</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>This password is used to further encrypt your private data on your device.</strong></p>\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Enter Password\"\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              style={{marginBottom: 20}}\r\n            />\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Confirm Password\"\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n              value={password2}\r\n              onChange={(e) => setPassword2(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={cancel} color=\"primary\">Cancel</Button>\r\n            <Button onClick={confirmPasswords} color=\"primary\">Continue</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>:\"\"}\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ConnectList from '../components/ConnectList';\r\nimport WalletDialog from '../components/WalletDialog';\r\nimport {StoicIdentity} from '../ic/identity.js';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction Connect(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [initialRoute, setInitialRoute] = React.useState('');\r\n  const dispatch = useDispatch()\r\n  const submit = (type, optdata) => {\r\n    props.loader(true);\r\n    StoicIdentity.setup(type, optdata).then(identity => {\r\n      dispatch({ type: 'createwallet', payload : {identity : identity}});\r\n      props.loader(false);\r\n      setOpen(true)\r\n      props.login();\r\n    }).catch(e => {\r\n      props.loader(false);\r\n      setOpen(true)\r\n    }).finally(() => {\r\n      setOpen(true)\r\n      props.loader(false)\r\n    });\r\n  };\r\n  const error = (e) => {\r\n    props.alert(\"There was an error\", e);\r\n  }\r\n  const cancel = (t) => {\r\n    setInitialRoute('');\r\n    setOpen(true);\r\n  };\r\n  const handleClick = (t) => {\r\n    setOpen(false);\r\n    switch(t) {\r\n      case \"create\":\r\n        setInitialRoute('tips');\r\n      break;\r\n      case \"import\":\r\n        setInitialRoute('import');\r\n      break;\r\n      case \"link\":\r\n        props.loader(true);\r\n        StoicIdentity.setup(\"ii\").then(identity => {\r\n          dispatch({ type: 'createwallet', payload : {identity : identity}});\r\n          props.loader(false);\r\n          setOpen(true)\r\n          props.login();\r\n        }).catch(e => {\r\n          props.loader(false);\r\n          setOpen(true)\r\n        }).finally(() => {\r\n          setOpen(true)\r\n          props.loader(false)\r\n        });\r\n      break;\r\n      case \"connect\":\r\n        //Show error\r\n        error(\"Hardware wallet support is coming soon!\")\r\n        setOpen(true)\r\n      break;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog hideBackdrop maxWidth={'sm'} fullWidth open={open}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Stoic Wallet</DialogTitle>\r\n        <DialogContent>\r\n          <ConnectList handler={handleClick} />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <WalletDialog alert={props.alert} initialRoute={initialRoute} cancel={cancel} submit={submit} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Connect;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {StoicIdentity} from '../ic/identity.js';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction Unlock(props) {\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const identity = useSelector(state => (state.principals.length ? state.principals[currentPrincipal].identity : {}))\r\n  const [open, setOpen] = React.useState(true);\r\n  const [password, setPassword] = React.useState('');\r\n  const error = (e) => {\r\n    props.alert(\"There was an error\", e);\r\n  }\r\n  const clear = () => {\r\n    props.confirm(\"Please confirm\", \"You are about to clear your wallet, which will remove all data from this device. Are you sure you want to continue?\").then(v => {\r\n      if (v) props.remove();\r\n    });\r\n  };\r\n  const loginPassword = () => {\r\n    if (!StoicIdentity.validatePassword(password)) return error(\"Password is invalid, please try again\");\r\n    props.loader(true);\r\n    setOpen(false);\r\n    \r\n    StoicIdentity.unlock(identity, {password : password}).then(r => {\r\n      props.login();\r\n    }).catch(e => {\r\n      setPassword('');\r\n      return error(\"You entered an incorrect password\");\r\n    }).finally(() => {\r\n      setOpen(true)\r\n      props.loader(false)\r\n    });\r\n  }\r\n  const iiLogin = () => {\r\n    props.loader(true);\r\n    setOpen(false);\r\n    \r\n    StoicIdentity.unlock(identity).then(r => {\r\n      props.login();\r\n    }).catch(e => {\r\n      console.log(e);\r\n    }).finally(() => {\r\n      setOpen(true)\r\n      props.loader(false)\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n    {identity.type == 'ii' ?\r\n      <Dialog hideBackdrop maxWidth={'sm'} fullWidth open={open}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Unlock your Wallet</DialogTitle>\r\n        <DialogContent>\r\n          <List component=\"nav\" aria-label=\"secondary add principal\">\r\n            <ListItem button onClick={iiLogin}>\r\n              <ListItemIcon>\r\n                <AllInclusiveIcon />\r\n              </ListItemIcon>\r\n              <ListItemText \r\n                primary=\"Re-authenticate\" \r\n                secondary=\"We need to authenticate your Internet Identity\" \r\n              />\r\n            </ListItem>\r\n          </List> \r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={clear} color=\"primary\">Clear Wallet</Button>\r\n        </DialogActions>\r\n      </Dialog>: \"\"}\r\n      {identity.type == 'private' ?\r\n        <Dialog hideBackdrop maxWidth={'sm'} fullWidth open={open}>\r\n          <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Unlock your Wallet</DialogTitle>\r\n          <DialogContent>\r\n            <p><strong>Enter your password to unlock your wallet.</strong></p>\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Enter Password\"\r\n              fullWidth\r\n              required\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={clear} color=\"primary\">Clear Wallet</Button>\r\n            <Button onClick={loginPassword} color=\"primary\">Unlock</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      : \"\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Unlock;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n  const handleClick = () => {\r\n    if (typeof props.handler != 'undefined') props.handler();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{props.message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={handleClick} color=\"primary\">\r\n        {props.buttonLabel ?? \"OK\" }\r\n      </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmDialog(props) {\r\n  const handleClick = (t) => {\r\n    if (typeof props.handler != 'undefined') props.handler(t);\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{props.message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button onClick={() => handleClick(false)} color=\"primary\">\r\n        {props.buttonCancel ?? \"Cancel\" }\r\n      </Button>\r\n      <Button onClick={() => handleClick(true)} color=\"primary\">\r\n        {props.buttonConfirm ?? \"Confirm\" }\r\n      </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Wallet from './containers/Wallet';\r\nimport Connect from './containers/Connect';\r\nimport Unlock from './containers/Unlock';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {StoicIdentity} from './ic/identity.js';\r\nimport AlertDialog from './components/AlertDialog';\r\nimport ConfirmDialog from './components/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\nconst emptyAlert = {\r\n  title : \"\",\r\n  message : \"\",\r\n};\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [loaderOpen, setLoaderOpen] = React.useState(false);\r\n  const [appState, setAppState] = React.useState(0); //0 = nologin, 1 = locked, 2 = unlocked\r\n  const principals = useSelector(state => state.principals)\r\n  const currentPrincipal = useSelector(state => state.currentPrincipal)\r\n  const dispatch = useDispatch()\r\n  const [alertData, setAlertData] = React.useState(emptyAlert); \r\n  const [confirmData, setConfirmData] = React.useState(emptyAlert); \r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [showConfirm, setShowConfirm] = React.useState(false);\r\n  \r\n  const remove = () => {\r\n    loader(true);\r\n    StoicIdentity.clear(principals[currentPrincipal].identity).then(r => {\r\n      setAppState(0);\r\n      loader(false);\r\n      setTimeout(() => {\r\n        dispatch({ type: 'removewallet'})\r\n      }, 1000);//hack in timeout to clear views...\r\n    })\r\n  };\r\n  const login = () => {\r\n    if (principals.length === 0) {\r\n      setAppState(0);\r\n    } else {\r\n      StoicIdentity.load(principals[currentPrincipal].identity).then(i => {\r\n        setAppState(2);\r\n      }).catch(e => {\r\n        setAppState(1);\r\n      });\r\n    }    \r\n  };\r\n  const logout = () => {\r\n    loader(true);\r\n    StoicIdentity.lock(principals[currentPrincipal].identity).then(r => {\r\n      setAppState(1);\r\n      login();\r\n    }).finally(() => {\r\n      loader(false);\r\n    });\r\n  };\r\n  \r\n  const alert = (title, message, buttonLabel) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      setAlertData({\r\n        title : title,\r\n        message : message,\r\n        buttonLabel : buttonLabel,\r\n        handler :  () => {\r\n          setShowAlert(false);\r\n          resolve(true);\r\n          setTimeout(() => setAlertData(emptyAlert), 100);\r\n        },\r\n      });\r\n      setShowAlert(true);\r\n    })\r\n  };\r\n  \r\n  const confirm = (title, message, buttonCancel, buttonConfirm) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      setConfirmData({\r\n        title : title,\r\n        message : message,\r\n        buttonCancel : buttonCancel,\r\n        buttonConfirm : buttonConfirm,\r\n        handler : (v) => {\r\n          setShowConfirm(false);\r\n          resolve(v);\r\n          setTimeout(() => setConfirmData(emptyAlert), 100);\r\n        },\r\n      });\r\n      setShowConfirm(true);\r\n    })\r\n  };\r\n  \r\n  React.useEffect(() => {\r\n    login();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    login();\r\n  }, [currentPrincipal, principals]);\r\n  \r\n  const loader = (l) => {\r\n    setLoaderOpen(l);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {appState === 0 ?\r\n      <Connect alert={alert} confirm={confirm} login={login} loader={loader} /> :\r\n      (appState === 1 ?\r\n      <Unlock alert={alert} confirm={confirm} login={login} remove={remove} loader={loader} /> :\r\n      <Wallet alert={alert} confirm={confirm} logout={logout} remove={remove} loader={loader} /> )}\r\n      <Backdrop className={classes.backdrop} open={loaderOpen} onClick={() => loader(false)}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <AlertDialog open={showAlert} title={alertData.title} message={alertData.message} buttonLabel={alertData.buttonLabel} handler={alertData.handler} />\r\n      <ConfirmDialog open={showConfirm} title={confirmData.title} message={confirmData.message} buttonCancel={confirmData.buttonCancel} buttonConfirm={confirmData.buttonConfirm} handler={confirmData.handler} />\r\n    </>\r\n  );\r\n}","import { createStore } from \"redux\";\r\nimport {principalToAccountIdentifier} from './ic/utils.js';\r\n\r\nvar appData = {\r\n  principals : [],\r\n  addresses : [],\r\n  currentPrincipal : 0,\r\n  currentAccount : 0,\r\n  currentToken : 0,\r\n};\r\nfunction initDb(){\r\n  var db = localStorage.getItem('_db');\r\n  if (db){\r\n    db = JSON.parse(db);\r\n    \r\n    //db versioning\r\n    var savenow = false;\r\n    if (!Array.isArray(db)) {\r\n      db = [[db],[],[0,0,0]];\r\n      console.log(\"Converting old DB to new\");\r\n      savenow = true;\r\n    }\r\n    if (db.length == 2) {\r\n      db[2] = [0,0,0];\r\n      savenow = true;\r\n    }\r\n    \r\n    \r\n    appData.currentPrincipal = db[2][0];\r\n    appData.currentAccount = db[2][1];\r\n    appData.currentToken = db[2][2];\r\n    appData.addresses = db[1];\r\n    db[0].map(principal => {\r\n      var _principal = {\r\n        accounts : [],\r\n        identity : principal.identity\r\n      };\r\n      principal.accounts.map((account, subaccount) => {\r\n        //savenow = true;\r\n        //if (subaccount >= 2) return;\r\n        var tokens = [];\r\n        tokens.push({\r\n          id : \"ryjl3-tyaaa-aaaaa-aaaba-cai\",\r\n          name : \"Internet Computer\",\r\n          symbol : \"ICP\",\r\n          decimals : 8,\r\n          type : 'fungible',\r\n        });\r\n        \r\n        var address = principalToAccountIdentifier(principal.identity.principal, subaccount);\r\n        account[1].map(token => {\r\n          tokens.push(token);\r\n          return true;\r\n        });\r\n        _principal.accounts.push({\r\n          name : account[0],\r\n          address : address,\r\n          tokens : tokens\r\n        });\r\n      });\r\n      appData.principals.push(_principal);\r\n    });\r\n    if (savenow) saveDb(appData);\r\n    return appData;\r\n  }\r\n}\r\nfunction newDb(identity){\r\n  var tc = [[\r\n    {\r\n      accounts : [\r\n        [\"Main\", \r\n          []\r\n        ]\r\n      ],\r\n      identity : identity\r\n    }\r\n  ],[],[0,0,0]];\r\n  localStorage.setItem('_db', JSON.stringify(tc));\r\n  return initDb();\r\n}\r\nfunction clearDb(){\r\n  localStorage.removeItem('_db');\r\n  var clearState = {\r\n    principals : [],\r\n    addresses : [],\r\n    currentPrincipal : 0,\r\n    currentAccount : 0,\r\n    currentToken : 0,\r\n  };\r\n  appData = clearState;\r\n  return clearState;\r\n}\r\nfunction saveDb(newState){\r\n  var updatedDb = [[], newState.addresses,[appData.currentPrincipal, appData.currentAccount, appData.currentToken]];\r\n  \r\n  newState.principals.map(principal => {\r\n    var _p = {\r\n      accounts : [],\r\n      identity : principal.identity\r\n    };\r\n    principal.accounts.map(account => {\r\n      var _a = [account.name, []];\r\n      account.tokens.map((b, i) => {\r\n      if (i === 0) return false;\r\n        _a[1].push({\r\n          id : b.id,\r\n          name : b.name,\r\n          symbol : b.symbol,\r\n          decimals : b.decimals,\r\n        });\r\n        return true;      \r\n      });\r\n      _p.accounts.push(_a);\r\n    });\r\n    updatedDb[0].push(_p);\r\n  });\r\n  localStorage.setItem('_db', JSON.stringify(updatedDb));\r\n  appData = newState;\r\n  return newState;\r\n}\r\n\r\ninitDb();\r\nfunction rootReducer(state = appData, action) {\r\n  switch(action.type){\r\n    case \"removewallet\":\r\n      return clearDb();\r\n    break;\r\n    case \"createwallet\":\r\n      return newDb(action.payload.identity);\r\n    break;\r\n    case \"currentPrincipal\":\r\n      return saveDb({\r\n        ...state,\r\n        currentToken : 0,\r\n        currentAccount : 0,\r\n        currentPrincipal : action.payload.index\r\n      });\r\n    break;\r\n    case \"currentAccount\":\r\n      return saveDb({\r\n        ...state,\r\n        currentToken : 0,\r\n        currentAccount : action.payload.index\r\n      });\r\n    break;\r\n    case \"currentToken\":\r\n      return saveDb({\r\n        ...state,\r\n        currentToken : action.payload.index\r\n      });\r\n    break;\r\n    case \"principal/add\": //TODO\r\n    break;\r\n    case \"account/edit\":\r\n      return saveDb({\r\n        ...state,\r\n        principals : state.principals.map((principal,i) => {\r\n          if (i == state.currentPrincipal) {\r\n            return {\r\n              ...principal,\r\n              accounts : principal.accounts.map((account,ii) => {\r\n                if (ii == state.currentAccount) {\r\n                  return {\r\n                    ...account,\r\n                    name : action.payload.name\r\n                  }\r\n                } else {\r\n                  return account;\r\n                }\r\n              }),\r\n            }\r\n          } else {\r\n            return principal;\r\n          }\r\n        }),\r\n      });\r\n    break;\r\n    case \"account/add\":\r\n      return saveDb({\r\n        ...state,\r\n        principals : state.principals.map((principal,i) => {\r\n          if (i == state.currentPrincipal) {\r\n            return {\r\n              ...principal,\r\n              accounts : [...principal.accounts, {\r\n                name : \"Account \" + action.payload.id,\r\n                address : principalToAccountIdentifier(action.payload.principal, action.payload.id),\r\n                tokens : [{\r\n                  name : \"Internet Computer\",\r\n                  symbol : \"ICP\",\r\n                  decimals : 8,\r\n                }]\r\n              }]\r\n            }\r\n          } else {\r\n            return principal;\r\n          }\r\n        }),\r\n      });\r\n    break;\r\n    case \"account/token/add\":\r\n      return saveDb({\r\n        ...state,\r\n        principals : state.principals.map((principal,i) => {\r\n          if (i == state.currentPrincipal) {\r\n            return {\r\n              ...principal,\r\n              accounts : principal.accounts.map((account,ii) => {\r\n                if (ii == state.currentAccount) {\r\n                  return {\r\n                    ...account,\r\n                    tokens : [...account.tokens, action.payload.metadata]\r\n                  }\r\n                } else {\r\n                  return account;\r\n                }\r\n              }),\r\n            }\r\n          } else {\r\n            return principal;\r\n          }\r\n        }),\r\n      });\r\n    break;\r\n    case \"addresses/add\":\r\n      return saveDb({\r\n        ...state,\r\n        addresses: [...state.addresses, action.payload]\r\n      });\r\n    break;\r\n    case \"addresses/edit\": \r\n      return saveDb({\r\n        ...state,\r\n        addresses:  state.addresses.map((address,i) => {\r\n          if (i == action.payload.index) {\r\n            return {\r\n              name : action.payload.name,\r\n              address : action.payload.address,\r\n            }\r\n          } else {\r\n            return address;\r\n          }\r\n        })\r\n      });\r\n    break;\r\n    case \"addresses/delete\":\r\n      return saveDb({\r\n        ...state,\r\n        addresses : state.addresses.filter((e,i) => i !== action.payload)\r\n      });\r\n    break;\r\n  }\r\n  return state;\r\n};\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#003240',\r\n    },\r\n    secondary: {\r\n      main: '#00b894',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fafafa',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiIconButton: {\r\n      label : {\r\n        color : \"#00b894\"\r\n      }\r\n    },\r\n    MuiAvatar: {\r\n      colorDefault: {\r\n        backgroundColor : '#00b894',\r\n        color : 'white'\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color : '#00b894'\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport theme from './theme';\r\nimport '@fontsource/roboto';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.querySelector('#root'),\r\n);","/* global BigInt */\r\nimport { Actor, HttpAgent, Principal, AnonymousIdentity } from \"@dfinity/agent\";  \r\nimport { AuthClient } from \"@dfinity/auth-client\";\r\nimport { principalToAccountIdentifier, toHexString, from32bits, to32bits, isHex, getSubAccountArray, fromHexString } from \"./utils.js\";\r\nimport RosettaApi from './RosettaApi.js';\r\n\r\nimport ledgerIDL from './candid/ledger.did.js';\r\nimport hzldIDL from './candid/hzld.did.js'; //hardcode to hzld...\r\nimport extIDL from './candid/ext.did.js';\r\n\r\nconst LEDGER_CANISTER_ID = \"ryjl3-tyaaa-aaaaa-aaaba-cai\";\r\nconst CYCLES_MINTING_CANISTER_ID = \"rkp4c-7iaaa-aaaaa-aaaca-cai\";\r\n\r\nconst rosettaApi = new RosettaApi();\r\nconst constructUser = (u) => {\r\n  if (isHex(u) && u.length == 64) {\r\n    return { 'address' : u };\r\n  } else {\r\n    return { 'principal' : Principal.fromText(u) };\r\n  };\r\n};\r\nconst tokenIdentifier = (principal, index) => {\r\n  const padding = Buffer(\"\\x0Atid\");\r\n  const array = new Uint8Array([\r\n      ...padding,\r\n      ...Principal.fromText(principal).toBlob(),\r\n      ...to32bits(index),\r\n  ]);\r\n  return Principal.fromBlob(array).toText();\r\n};\r\nconst decodeTokenId = (tid) => {\r\n  var p = [...Principal.fromText(tid).toBlob()];\r\n  var padding = p.splice(0, 4);\r\n  if (toHexString(padding) != toHexString(Buffer(\"\\x0Atid\"))) {\r\n    return {\r\n      index : 0,\r\n      canister : tid,\r\n      token : tokenIdentifier(tid, 0)\r\n    };\r\n  } else {\r\n    return {\r\n      index : from32bits(p.splice(-4)), \r\n      canister : Principal.fromBlob(p).toText(),\r\n      token : tid\r\n    };\r\n  }\r\n};\r\n\r\nconst getCyclesTopupAddress = (canisterId) => {\r\n  return principalToAccountIdentifier(CYCLES_MINTING_CANISTER_ID, getCyclesTopupSubAccount(canisterId));\r\n}\r\nconst getCyclesTopupSubAccount = (canisterId) => {\r\n  var pb = Array.from(Principal.fromText(canisterId).toBlob());\r\n  return [pb.length, ...pb];\r\n}\r\n\r\n\r\n//Add way to preload other idls\r\n//TODO download idls\r\nclass ExtConnection {\r\n  _preloadedIdls = {\r\n    \"ryjl3-tyaaa-aaaaa-aaaba-cai\" : ledgerIDL,\r\n    \"qz7gu-giaaa-aaaaf-qaaka-cai\" : hzldIDL,\r\n  };\r\n  _metadata = {\r\n    LEDGER_CANISTER_ID : {\r\n      name : \"ICP\",\r\n      symbol : \"ICP\",\r\n      decimals : 8,\r\n    }\r\n  };\r\n  _identity = false;//new AnonymousIdentity();\r\n  _host = false;\r\n  _agent = false;\r\n  _canisters = {};\r\n  constructor(host, identity) {\r\n    if (identity) this._identity = identity;\r\n    if (host) this._host = host;\r\n    this._makeAgent();\r\n  }\r\n  setIdentity(identity) {\r\n    if (identity) this._identity = identity;\r\n    else this._identity = false;\r\n    this._makeAgent();\r\n    return this;\r\n  }\r\n  setHost(host) {\r\n    if (host) this._host = host;\r\n    else this._host = false;\r\n    this._makeAgent();\r\n    return this;\r\n  }\r\n  canister(cid, idl) {\r\n    if (!idl){\r\n      if (this._preloadedIdls.hasOwnProperty(cid)) {\r\n        idl = this._preloadedIdls[cid];\r\n      } else {\r\n        idl = extIDL;\r\n      }\r\n    }\r\n    if (!this._canisters.hasOwnProperty(cid)){\r\n      this._canisters[cid] = Actor.createActor(idl, {agent : this._agent, canisterId : cid});\r\n    }\r\n    return this._canisters[cid];\r\n  }\r\n  token(tid, idl) {\r\n    if (!tid) tid = LEDGER_CANISTER_ID;//defaults to ledger\r\n    var tokenObj = decodeTokenId(tid);\r\n    if (!idl) {\r\n      if (this._preloadedIdls.hasOwnProperty(tokenObj.canister)) idl = this._preloadedIdls[tokenObj.canister];\r\n      else idl = extIDL; //ext is our token default...\r\n    }\r\n    var api = this.canister(tokenObj.canister, idl);\r\n    return {\r\n      fee : () => {\r\n        return new Promise((resolve, reject) => {\r\n          switch(tokenObj.canister) {\r\n            case LEDGER_CANISTER_ID:\r\n              resolve(10000);\r\n            break;\r\n            case \"qz7gu-giaaa-aaaaf-qaaka-cai\":\r\n              resolve(1);\r\n            break;\r\n            default:\r\n              //TODO compute fees\r\n              resolve(0);\r\n            break;\r\n          }\r\n        });\r\n      },\r\n      getMetadata : () => {\r\n        return new Promise((resolve, reject) => {\r\n          switch(tokenObj.canister) {\r\n            case LEDGER_CANISTER_ID:\r\n              resolve({\r\n                name : \"Internet Computer\",\r\n                symbol : \"ICP\",\r\n                type : 'fungible',\r\n                decimals : 8\r\n              });\r\n            break;\r\n            case \"qz7gu-giaaa-aaaaf-qaaka-cai\":\r\n              resolve({\r\n                name : \"HZLD\",\r\n                symbol : \"HZLD\",\r\n                decimals : 0,\r\n                type : 'fungible',\r\n              });\r\n            break;\r\n            default:\r\n              api.metadata(tokenObj.token).then(r => {\r\n                if (typeof r.ok != 'undefined') {\r\n                  if (typeof r.ok.fungible != 'undefined') {\r\n                    resolve({\r\n                      name : r.ok.fungible.name,\r\n                      symbol : r.ok.fungible.symbol,\r\n                      decimals : r.ok.fungible.decimals,\r\n                      metadata : r.ok.fungible.metadata,\r\n                      type : 'fungible'\r\n                    });\r\n                  } else {\r\n                    resolve({\r\n                      metadata : r.ok.nonfungible.metadata,\r\n                      type : 'nonfungible'\r\n                    });\r\n                  }\r\n                } else if (typeof r.err != 'undefined') reject(r.err)\r\n                else reject(r);\r\n              }).catch(reject);\r\n            break;\r\n          }\r\n        });\r\n      },\r\n      getBalance : (address, princpal) => {\r\n        return new Promise((resolve, reject) => {\r\n          switch(tokenObj.canister) {\r\n            case LEDGER_CANISTER_ID:\r\n              rosettaApi.getAccountBalance(address).then(b => {       \r\n                resolve(b)\r\n              });\r\n            break;\r\n            case \"qz7gu-giaaa-aaaaf-qaaka-cai\":\r\n              var args = {\r\n                \"user\" : Principal.fromText(princpal)\r\n              };\r\n              api.getBalanceInsecure(args).then(b => {\r\n                var bal = b.length == 0 ? 0 : b[0];\r\n                resolve(bal);\r\n              }).catch(reject);\r\n            break;\r\n            default:\r\n              var args = {\r\n                \"user\" : constructUser(address),\r\n                'token' : tokenObj.token\r\n              };\r\n              api.balance(args).then(r => {\r\n                if (typeof r.ok != 'undefined') resolve(r.ok)\r\n                else if (typeof r.err != 'undefined') reject(r.err)\r\n                else reject(r);\r\n              }).catch(reject);            \r\n            break;\r\n          }\r\n        });\r\n      },\r\n      getTransactions : (address, princpal) => {\r\n        return new Promise((resolve, reject) => {\r\n          switch(tokenObj.canister) {\r\n            case LEDGER_CANISTER_ID:\r\n              rosettaApi.getTransactionsByAccount(address).then(ts => {    \r\n                if (!Array.isArray(ts)) resolve([]);\r\n                var _ts = [];\r\n                ts.map(_t => {\r\n                  if (_t.type != \"TRANSACTION\") return;\r\n                  if (_t.status != \"COMPLETED\") return;\r\n                  _ts.push({\r\n                    from : _t.account1Address,\r\n                    to :  _t.account2Address,\r\n                    amount : Number(_t.amount)/(10**8),\r\n                    fee : Number(_t.fee)/(10**8),\r\n                    hash : _t.hash,\r\n                    timestamp : _t.timestamp,\r\n                  });\r\n                });\r\n                resolve(_ts);\r\n              }).catch(reject);\r\n            break;\r\n            case \"qz7gu-giaaa-aaaaf-qaaka-cai\":\r\n            default:\r\n              resolve([]);         \r\n            break;\r\n          }\r\n        });\r\n      },\r\n      /*\r\n        from_principal = principal of account as text\r\n        from_sa = subaccount (to produce hex address). null/0 default as number\r\n        to_user = valid User (address or principal) as text\r\n        amount = valid amount as BigInt\r\n        fee = valid fee as BigInt\r\n        memo = data to be sent as text/hex/number\r\n        notify = if we need to notify TODO\r\n      */\r\n      transfer : (from_principal, from_sa, to_user, amount, fee, memo, notify) => {\r\n        return new Promise((resolve, reject) => {\r\n          switch(tokenObj.canister) {\r\n            case LEDGER_CANISTER_ID:\r\n              var args = {\r\n                \"from_subaccount\" : [getSubAccountArray(from_sa ?? 0)], \r\n                \"to\" : to_user, //Should be an address\r\n                \"amount\" : { \"e8s\" : amount },\r\n                \"fee\" : { \"e8s\" : fee }, \r\n                \"memo\" : memo ? Number(BigInt(memo)) : 0, \r\n                \"created_at_time\" : []\r\n              };\r\n              api.send_dfx(args).then(bh => {\r\n                resolve(true);\r\n              }).catch(reject);\r\n              //Notify here\r\n            break;\r\n            case \"qz7gu-giaaa-aaaaf-qaaka-cai\":\r\n              var args = {\r\n                \"to\" : Principal.fromText(to_user), \r\n                \"metadata\" : [],\r\n                \"from\" : Principal.fromText(from_principal),\r\n                \"amount\" : amount\r\n              };\r\n              api.transfer(args).then(b => {\r\n                if (typeof b.ok != 'undefined') {          \r\n                  resolve(true);\r\n                } else {\r\n                  reject(JSON.stringify(b.err));\r\n                }\r\n              }).catch(reject);\r\n            break;\r\n            default:\r\n              var args = {\r\n                'token' : tid,\r\n                'from' : { 'address' : principalToAccountIdentifier(from_principal, from_sa ?? 0) },\r\n                'subaccount' : [getSubAccountArray(from_sa ?? 0)],\r\n                'to' : constructUser(to_user),\r\n                'amount' : amount,\r\n                'fee' : fee,\r\n                'memo' : fromHexString(memo),\r\n                'notify' : notify\r\n              };\r\n              api.transfer(args).then(b => {\r\n                if (typeof b.ok != 'undefined') {\r\n                  resolve(true);\r\n                } else {\r\n                  reject(JSON.stringify(b.err));\r\n                }\r\n              }).catch(reject);\r\n            break;\r\n          }\r\n        });\r\n      },\r\n      //TODO\r\n      mintCycles : () => {\r\n        return new Promise((resolve, reject) => {\r\n        });\r\n      }\r\n    };\r\n  }\r\n  _makeAgent() {\r\n    var args = {};\r\n    if (this._identity) args['identity'] = this._identity;\r\n    if (this._host) args['host'] = this._host;\r\n    this._agent = new HttpAgent(args);\r\n  };\r\n};\r\n\r\nconst extjs = {\r\n  connect : (identity, host) => new ExtConnection(identity, host)\r\n};\r\nexport default extjs;"],"sourceRoot":""}